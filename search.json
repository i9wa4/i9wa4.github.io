[
  {
    "objectID": "bookmarks/tech-bookmarks.html",
    "href": "bookmarks/tech-bookmarks.html",
    "title": "技術系ブックマーク",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nこれまで蓄積してきたブックマークをここに整理します。随時更新。"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#cloud",
    "href": "bookmarks/tech-bookmarks.html#cloud",
    "title": "技術系ブックマーク",
    "section": "1. Cloud",
    "text": "1. Cloud\n\n\nCode\nextract_tag('Cloud')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nAmazon Linux Security Center - CVE List\n\n\n\n\n\n\n\n2024-04-06\n\n\n\n総務省｜報道資料｜「クラウドの設定ミス対策ガイドブック」の公表\n\n\n\n\n\n\n\n2023-12-17\n\n\n\nAWSリソースの名称にリージョンを入れるときは空港コードを使う #AWS - Qiita\n\n\n\n\n\n\n\n2023-12-15\n\n\n\nAWS構成図作成のガイドラインまとめ - サーバーワークスエンジニアブログ\n\n\n\n\n\n\n\n2023-07-13\n\n\n\n【2022年版ベストプラクティス】AWS IAMまとめ - Qiita\n\n\n\n\n\n\n\n2020-07-15\n\n\n\nTerraform で GCP IAM 設定どれ使うのがいいのか - pokutuna\n\n\n\n\n\n\n\n2020-03-05\n\n\n\nAirflow のアーキテクチャをざっくり理解して、どうやって使うのか学んでみた | DevelopersIO"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#data-engineering",
    "href": "bookmarks/tech-bookmarks.html#data-engineering",
    "title": "技術系ブックマーク",
    "section": "2. Data Engineering",
    "text": "2. Data Engineering"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#container",
    "href": "bookmarks/tech-bookmarks.html#container",
    "title": "技術系ブックマーク",
    "section": "3. Container",
    "text": "3. Container\n\n\nCode\nextract_tag('Container')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nInstall Docker Engine on Ubuntu | Docker Documentation\n\n\n\n\n\n\n\n2024-08-02\n\n\n\nDockerfileを解析、最適化やベストプラクティスをガイドしてくれる「Docker Buildチェック」機能が正式版に － Publickey\n\n\n\n\n\n\n\n2024-07-26\n\n\n\n2024年版のDockerfileの考え方＆書き方 | フューチャー技術ブログ\n\n\n\n\n\n\n\n2024-07-13\n\n\n\nLinux コンテナの歴史を追うとコンテナの仕組みがわかる / Dai Kichijoji pm - Speaker Deck\n\n\n\n\n\n\n\n2023-03-27\n\n\n\n雰囲気でDocker Composeを触っている状態から脱するために調べたこと（2023） - Activ8 Tech Blog\n\n\n\n\n\n\n\n2022-09-02\n\n\n\nDockerfile ベストプラクティス／2022夏 #Docker - Qiita\n\n\n\n\n\n\n\n2022-03-21\n\n\n\n初心者が絵で理解する Docker - Zenn"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#github",
    "href": "bookmarks/tech-bookmarks.html#github",
    "title": "技術系ブックマーク",
    "section": "4. GitHub",
    "text": "4. GitHub\n\n\nCode\nextract_tag('GitHub')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nBootstrap Icons · Official open source SVG icon library for Bootstrap\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nSimple Icons\n\n\n\n\n\n\n\n9999-12-31\n\n\n\n基本的な書き方とフォーマットの構文 - GitHub Docs\n\n\n\n\n\n\n\n2024-06-19\n\n\n\nWSL2でのGitHubの認証をできる限り楽に行う | cloud.config Tech Blog\n\n\n\n\n\n\n\n2024-04-03\n\n\n\nMac GitHub SSH接続設定 #初期設定 - Qiita\n\n\n\n\n\n\n\n2023-12-08\n\n\n\n【2023年最新】WSLで最も簡単にGitHubにログインする\n\n\n\n\n\n\n\n2022-08-24\n\n\n\n【解決】WSL2(Ubuntu)でsshキーの追加時にエラーが起きた時の対処法(Could not open a connection to your authentication agent.) | Inno-Tech-Life\n\n\n\n\n\n\n\n2017-05-31\n\n\n\n///33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333-g=-[=. · Issue #3909 · redis/redis"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#language",
    "href": "bookmarks/tech-bookmarks.html#language",
    "title": "技術系ブックマーク",
    "section": "5. Language",
    "text": "5. Language\n\n5.1. Python\n\n\nCode\nextract_tag('Lang-Python')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nIntroduction - PDM\n\n\n\n\n\n\n\n2024-09-05\n\n\n\nuv へ移行 from pyenv & poetry (docker前提） #Python - Qiita\n\n\n\n\n\n\n\n2024-08-31\n\n\n\nPolars の基礎概念を理解する #Python - Qiita\n\n\n\n\n\n\n\n2024-07-15\n\n\n\n「Pythonのドキュメントでも読むか～」「え、何その裏技」 #初心者 - Qiita\n\n\n\n\n\n\n\n2024-07-12\n\n\n\nプロダクトのコードをPandasからPolarsへ書き換えた話 - Speaker Deck\n\n\n\n\n\n\n\n2024-05-26\n\n\n\npyenvを初心者に薦めるのはもうやめよう - methaneのブログ\n\n\n\n\n\n\n\n2024-04-20\n\n\n\nPandasからPolarsへ移行した方がいいのか #Python - Qiita\n\n\n\n\n\n\n\n2023-03-22\n\n\n\nあなたのPythonを100倍高速にする技術 / Codon入門 - Zenn\n\n\n\n\n\n\n\n2023-02-07\n\n\n\nRust製高速データフレームライブラリ、Polarsを試す | gihyo.jp\n\n\n\n\n\n\n\n2023-01-04\n\n\n\nそのPythonパッケージ管理、venv + pipでよくないですか? in 2023/1 - Zenn\n\n\n\n\n\n\n\n2021-12-15\n\n\n\n__ init __.py とは - Qiita\n\n\n\n\n\n\n\n2021-12-07\n\n\n\n遅くないpandasの書き方 - ML_BearのKaggleな日常\n\n\n\n\n\n\n\n2020-04-29\n\n\n\nPythonをコマンドで実行する時に入力する -m とは何か | Misprochef blog\n\n\n\n\n\n\n\n2020-01-22\n\n\n\n__ init __.py を省略してはいけない - Qiita\n\n\n\n\n\n\n\n2019-05-26\n\n\n\nPython for文とイテレータとジェネレータ - SIer だけど技術やりたいブログ\n\n\n\n\n\n\n\n\n\n\n\n5.2. SQL\n\n\nCode\nextract_tag('Lang-SQL')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n2024-05-21\n\n\n\nデータ基盤のためのリーダブルSQL - Zenn\n\n\n\n\n\n\n\n2023-05-13\n\n\n\nsqlfmtによって何を解決したいのか - Zenn\n\n\n\n\n\n\n\n2021-03-29\n\n\n\n今日は、SQL勉強して三年目だがUsingとOnの気づかなかった違いの日。 - 今日はなにの日。\n\n\n\n\n\n\n\n2020-12-04\n\n\n\n【SQL】可読性を上げるために意識していること - Qiita\n\n\n\n\n\n\n\n2018-05-14\n\n\n\n漢(オトコ)のコンピュータ道: MySQLのZero Dateへの対処法"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#linux",
    "href": "bookmarks/tech-bookmarks.html#linux",
    "title": "技術系ブックマーク",
    "section": "6. Linux",
    "text": "6. Linux\n\n\nCode\nextract_tag('Linux')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nCertified hardware | Ubuntu\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nCreate a bootable USB stick with Rufus on Windows | Ubuntu\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nFilesystem Hierarchy Standard - Wikipedia\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nInstall Ubuntu desktop | Ubuntu\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nPacman/比較表 - ArchWiki\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nPing-t\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nPronunciation guide for Unix - Linux - SS64.com\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nSadServers - Troubleshooting Linux Servers\n\n\n\n\n\n\n\n2024-04-28\n\n\n\nUbuntu 24.04 getting error You must put some 'deb-src' URIs in your sources.list when issuing apt-get build-dep - Ask Ubuntu\n\n\n\n\n\n\n\n2023-05-14\n\n\n\nロブ・パイク氏が語ったドットファイルの由来とは | ソフトアンテナ\n\n\n\n\n\n\n\n2022-02-28\n\n\n\nraspberry pi のSDカードの寿命を意識した設定をする。microSDを長持ちさせる。 - それマグで！\n\n\n\n\n\n\n\n2019-04-19\n\n\n\nBig Sky :: 1つの横着から隠しファイルが生まれた瞬間\n\n\n\n\n\n\n\n2018-11-25\n\n\n\nLinuxインストールに使ったUSBメモリを元に戻す(Windows10) - y_megane.log\n\n\n\n\n\n\n\n2012-03-15\n\n\n\nWhy was '~' chosen to represent the home directory? - Unix & Linux Stack Exchange"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#machine-learning",
    "href": "bookmarks/tech-bookmarks.html#machine-learning",
    "title": "技術系ブックマーク",
    "section": "7. Machine Learning",
    "text": "7. Machine Learning\n\n\nCode\nextract_tag('Machine-Learning')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite\n\n\n\n\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nQDくんの過去ツイまとめ（機械学習、時系列分析、確率・統計に関する有益記事紹介） / X\n\n\n\n\n\n\n\n9999-12-31\n\n\n\nはじめに — 機械学習帳”“\n\n\n\n\n\n\n\n9999-12-31\n\n\n\n機械学習基盤のアーキテクチャ特集000〜8社の設計意図と今後の展望〜 - Findy Tools\n\n\n\n\n\n\n\n2024-09-03\n\n\n\n8年間の進化！CARTA MARKETING FIRMが機械学習基盤を刷新した理由とその成果 - CARTA TECH BLOG\n\n\n\n\n\n\n\n2024-08-06\n\n\n\nAmazon SageMakerが実験追跡を強化するマネージドMLflow機能を提供開始 - InfoQ\n\n\n\n\n\n\n\n2022-12-19\n\n\n\nたった3人で運用するドコモを支える機械学習基盤の作り方 ー Kubernates × Airflow × DataRobot を使ったMLOpsパイプライン ー - ENGINEERING BLOG ドコモ開発者ブログ\n\n\n\n\n\n\n\n2022-12-02\n\n\n\n次世代のワークフロー管理ツールPrefectでMLワークフローを構築する | CyberAgent Developers Blog\n\n\n\n\n\n\n\n2020-09-15\n\n\n\n東大が無料公開している超良質なPython/Data Science/Cloud教材まとめ (*随時更新) - Digital, digital and digital"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#network",
    "href": "bookmarks/tech-bookmarks.html#network",
    "title": "技術系ブックマーク",
    "section": "8. Network",
    "text": "8. Network\n\n\nCode\nextract_tag('Network')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#nix",
    "href": "bookmarks/tech-bookmarks.html#nix",
    "title": "技術系ブックマーク",
    "section": "9. Nix",
    "text": "9. Nix\n\n\nCode\nextract_tag('Nix')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#programming",
    "href": "bookmarks/tech-bookmarks.html#programming",
    "title": "技術系ブックマーク",
    "section": "10. Programming",
    "text": "10. Programming\n\n\nCode\nextract_tag('Programming')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#service",
    "href": "bookmarks/tech-bookmarks.html#service",
    "title": "技術系ブックマーク",
    "section": "11. Service",
    "text": "11. Service\n\n\nCode\nextract_tag('Service')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#terraform",
    "href": "bookmarks/tech-bookmarks.html#terraform",
    "title": "技術系ブックマーク",
    "section": "12. Terraform",
    "text": "12. Terraform\n\n\nCode\nextract_tag('Terraform')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "bookmarks/tech-bookmarks.html#others",
    "href": "bookmarks/tech-bookmarks.html#others",
    "title": "技術系ブックマーク",
    "section": "13. Others",
    "text": "13. Others\n\n\nCode\nextract_tag('Others')\n\n\n\n\n\n\n\n\n\nDate\n\n\n\nWebsite"
  },
  {
    "objectID": "memo/2024-07-20-aigis-note.html",
    "href": "memo/2024-07-20-aigis-note.html",
    "title": "自分用千年戦争アイギスメモ",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n偶にハマって偶に飽きて辞めるという距離感で遊んでいる千年戦争アイギスのメモです。"
  },
  {
    "objectID": "memo/2024-07-20-aigis-note.html#週次周回",
    "href": "memo/2024-07-20-aigis-note.html#週次周回",
    "title": "自分用千年戦争アイギスメモ",
    "section": "1. 週次周回",
    "text": "1. 週次周回\n\n\n\n曜日\n対象\n\n\n\n\n月\n刻水晶\n\n\n火\n\n\n\n水\n魔水晶\n\n\n木\n好感度\n\n\n金\n\n\n\n土\n刻水晶, 魔水晶\n\n\n日\n好感度"
  },
  {
    "objectID": "memo/2024-07-20-aigis-note.html#月次の交換先",
    "href": "memo/2024-07-20-aigis-note.html#月次の交換先",
    "title": "自分用千年戦争アイギスメモ",
    "section": "2. 月次の交換先",
    "text": "2. 月次の交換先\n\n刻水晶 400\n\n白の皇帝 * 4 に交換する\n白の皇帝 信頼度150% Lv20 まで育成して他ユニットの餌にする\n\n魔水晶 900\n\nリングと勲章に交換する\n\n覚醒聖霊ヴィクトワール\n\n統帥結晶ではなく魔水晶で交換する"
  },
  {
    "objectID": "memo/2024-07-20-minecraft-note.html",
    "href": "memo/2024-07-20-minecraft-note.html",
    "title": "自分用 Minecraft メモ",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nMinecraft の自分用メモを公開しておきます。"
  },
  {
    "objectID": "memo/2024-07-20-minecraft-note.html#todo",
    "href": "memo/2024-07-20-minecraft-note.html#todo",
    "title": "自分用 Minecraft メモ",
    "section": "1. TODO",
    "text": "1. TODO\n\n地下トラップタワー (経験値自動取得)\n倉庫チェスト再設計\n羊毛仕分け\n山削り\n苔式骨粉製造機\n襲撃者トラップ@前哨基地 1880 632\n弓作り直し\nエンダーチェスト\nエンダードラゴン\nポーション醸造所\nウーパールーパー"
  },
  {
    "objectID": "memo/2024-07-20-minecraft-note.html#座標メモ",
    "href": "memo/2024-07-20-minecraft-note.html#座標メモ",
    "title": "自分用 Minecraft メモ",
    "section": "2. 座標メモ",
    "text": "2. 座標メモ\n\n\n\nX\nY\nZ\nDescription\n\n\n\n\n-32\n15\n26\nゾンビスポナー\n\n\n112\n59\n8\nゾンビスポナー\n\n\n338\n-28\n-148\nゾンビスポナー"
  },
  {
    "objectID": "memo/2024-07-20-minecraft-note.html#エンチャント",
    "href": "memo/2024-07-20-minecraft-note.html#エンチャント",
    "title": "自分用 Minecraft メモ",
    "section": "3. エンチャント",
    "text": "3. エンチャント\n\n3.1. 防具\n\n共通\n\n修繕I\n耐久力III\nダメージ軽減IV\n\nヘルメット\n\n水中採掘\n水中呼吸III\n\nチェストプレート\nレギンス\n\nスニーク速度上昇\n\nブーツ\n\n水中歩行III\n落下耐性IV\n\n\n\n\n3.2. 武器\n\n共通\n\n修繕I\n耐久力III\n\n剣\n\n火属性II\nドロップ増加III\nノックバックII\nダメージ増加V\n\n弓\n\nフレイム\n射撃ダメージ増加V\nパンチII\n無限\n\nクロスボウ\n\n高速充填III\n貫通IV\n\nトライデント\n\n水性特攻V\n忠誠III\n召雷\n\n\n\n\n3.3. 道具\n\n共通\n\n修繕I\n耐久力III\n効率強化V\n幸運III or シルクタッチ"
  },
  {
    "objectID": "memo/2024-07-20-minecraft-note.html#村人職業設計",
    "href": "memo/2024-07-20-minecraft-note.html#村人職業設計",
    "title": "自分用 Minecraft メモ",
    "section": "4. 村人職業設計",
    "text": "4. 村人職業設計\n\n司書 書見台 (20)\n\nTier1 (10)\n\n修繕I (2)\n耐久力III (2)\n効率強化V (2)\n幸運III (1)\nシルクタッチ (1)\nダメージ軽減IV (2)\n\nTier2 (10)\n\n水中採掘\n水中呼吸III\n水中歩行III\n落下耐性IV\n火属性II\nドロップ増加III\nノックバックII\nダメージ増加V\nフレイム\n射撃ダメージ増加V\n\n\n武器鍛冶 石臼 (1)\n防具鍛冶 溶鉱炉 (2)\n道具鍛冶 鍛冶台 (1+6)\n石工 石切台 ()\n\nクォーツブロック\nテラコッタ\nレンガ"
  },
  {
    "objectID": "resume/01-okuma.html",
    "href": "resume/01-okuma.html",
    "title": "職務経歴 オークマ株式会社",
    "section": "",
    "text": "Table 1: 会社概要・雇用形態 (2018年時点)\n\n\n\n\n\n\n\n\n\n事業内容\nCNC工作機械、CNC装置・サーボモータ・位置検出器・ソフトウェアの開発・製造、販売\n\n\n資本金\n180億円\n\n\n売上高\n1600億円\n\n\n従業員数\n3407名\n\n\n上場／非上場\n上場\n\n\n勤務地\n愛知県\n\n\n雇用形態\n正社員\n\n\n所属\n[2016/04 - 2017/03] 人事部付[2017/04 - 2018/07] FAシステム本部 FA開発部 ITプラザ開発課\n以下、新しい順にプロジェクトを記載しております。"
  },
  {
    "objectID": "resume/01-okuma.html#windows7-向け対話形式-3d-cadcam-アプリケーション開発",
    "href": "resume/01-okuma.html#windows7-向け対話形式-3d-cadcam-アプリケーション開発",
    "title": "職務経歴 オークマ株式会社",
    "section": "1. Windows7 向け対話形式 3D-CAD/CAM アプリケーション開発",
    "text": "1. Windows7 向け対話形式 3D-CAD/CAM アプリケーション開発\n\n1.1. 期間\n\n2017/04 - 2018/07\n\n\n\n1.2. 担当業務\n\n大型アップデート用UI要件定義\nテスト仕様書作成\n結合テスト・システムテスト実施\nユーザ問い合わせ対応\n不具合対応\n\n\n\n1.3. 担当フェーズ\n\n要件定義\nテスト\n保守\n\n\n\n1.4. 開発環境\n\nWindows7\nC++\n\n\n\n1.5. 規模・役割\n\n10名\nメンバー"
  },
  {
    "objectID": "resume/01-okuma.html#windows7-向け-2d-cadcam-アプリケーション開発",
    "href": "resume/01-okuma.html#windows7-向け-2d-cadcam-アプリケーション開発",
    "title": "職務経歴 オークマ株式会社",
    "section": "2. Windows7 向け 2D-CAD/CAM アプリケーション開発",
    "text": "2. Windows7 向け 2D-CAD/CAM アプリケーション開発\n\n2.1. 期間\n\n2017/04 - 2018/07\n\n\n\n2.2. 担当業務\n\nテスト仕様書作成\n結合テスト・システムテスト実施\nユーザ問い合わせ対応\n受注先の工作機械に応じたチューニング\n\n\n\n2.3. 担当フェーズ\n\nテスト\n保守\n\n\n\n2.4. 開発環境\n\nWindows7\nC++\n\n\n\n2.5. 規模・役割\n\n5名\nメンバー"
  },
  {
    "objectID": "resume/03-cnsh.html",
    "href": "resume/03-cnsh.html",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "",
    "text": "Table 1: 会社概要・雇用形態 (2024年時点)\n\n\n\n\n\n\n\n\n\n事業内容\nアプリケーション開発・インフラ構築事業、クラウド構築事業、データ分析・AI事業、DX支援事業\n\n\n資本金\n2500万円\n\n\n売上高\n7億5,351万円\n\n\n従業員数\n39名\n\n\n上場／非上場\n非上場\n\n\n勤務地\n北海道札幌市週に約4回リモートワーク実施\n\n\n雇用形態\n正社員\n\n\n所属\n[2022/04 - 2024/03] デジタルビジネス推進部\n以下、新しい順にプロジェクトを記載しております。"
  },
  {
    "objectID": "resume/03-cnsh.html#プロジェクト以外の業務",
    "href": "resume/03-cnsh.html#プロジェクト以外の業務",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "1. プロジェクト以外の業務",
    "text": "1. プロジェクト以外の業務\n\n1.1. 新卒採用一次選考の面接官対応\n\n2024年新卒採用：学生6名分\n2025年新卒採用：学生6名分\n\n\n\n1.2. データ分析業務担当者育成\n\n育成用プログラム進捗管理 (2023/06 - 2023/12)\n\n利用教材：データサイエンス100本ノック\n育成対象者：7名 (2023年度)\n業務：環境構築手順作成・質疑応答対応・作業進捗管理 (すべて私1名で対応)\n\nローカル上の環境構築手順の共有 (随時)\n\n社内 Wiki にて記事作成\n具体例\n\nAmazon Linux (EC2) + Anaconda + PyStan 環境構築\nWindows + Anaconda + PyStan 環境構築\nUbuntu (WSL2) + Docker (Dockerfile) + CPython + venv 環境構築\nUbuntu (WSL2) + Docker 環境構築 (データサイエンス100本ノック向け)\nAmazon Linux (Cloud9) + pyenv 環境構築\nVSCode と Vim での Linter Formatter 導入方法\n\n\nデータ分析関連技術情報共有 (随時)\n\nニュースサイト・技術ブログ・技術コミュニティにて情報収集し、社内チャットにて随時共有"
  },
  {
    "objectID": "resume/03-cnsh.html#情報通信企業向け-機械学習ワークフローと-ai-プラットフォーム移管",
    "href": "resume/03-cnsh.html#情報通信企業向け-機械学習ワークフローと-ai-プラットフォーム移管",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "2. 情報通信企業向け 機械学習ワークフローと AI プラットフォーム移管",
    "text": "2. 情報通信企業向け 機械学習ワークフローと AI プラットフォーム移管\n\n2.1. 概要\n\nDataRobot 中心で構築していた機械学習ワークフローから Snowpark ML (Snowflake) 中心の構築への移管\n\n\n\n2.2. 期間\n\n[2023/12 - 2024/01] Snowpark ML 事前検証\n[2024/02 - 2024/03] 追加調査・ワークフロー設計\n\n\n\n2.3. 規模・役割\n\n[2023/12 - 2024/01]\n\n役割：メンバー\n規模：1名 (私)\n\n[2024/02 - 2024/03]\n\n役割：リーダー\n規模：2名\n\n自社の若手2名\n\n\n\n\n\n2.4. 担当業務\n\n[2023/12 - 2024/01] (私1名) Snowpark ML の事前検証\n[2024/02 - 2024/03] (2名) DataRobot から Snowpark ML への移管のための追加調査\n[2024/03] (私1名) ワークフロー設計\n\n\n\n2.5. 機能開発・実装詳細\n移管前後の構築詳細は以下の通りです。\n\n移管前構築 (AWS MWAA + ECS + DataRobot + Snowflake)\n\nMWAA にてワークフロー管理を行っており DAG ファイルにてジョブを定義し並列処理や直列処理を記述していました。\nMWAA KubernetesPodOperator にて利用する ECS イメージを JupyterHub (ノートブック実行環境) でも共有していたため本番と開発でライブラリ依存関係の齟齬がない環境でした。\nAI プラットフォームとして DataRobot を採用し、ハイパーパラメータチューニングやモデル評価を全てフルマネージドで実施させていました。ただしコストが嵩む問題がありました。\n\n移管後構築 (AWS SageMaker + Snowpark ML + Snowflake)\n\nAI プラットフォームとして Snowpark ML を採用することとしました。使用感は scikit-learn に近く、ラベルエンコーディング・ハイパーパラメータチューニング・モデル評価を自力で実装する必要があります。\nワークフローは “SageMaker + Papermill” でノートブック上での管理となります。\nモデルはモデルレジストリ機能にて管理させます。\n他部署 (他の環境) とも共有できるように素朴な実装を目指しました。\n\n\n\n\n2.6. 目的・背景\n\nコスト上の問題から DataRobot の利用を2024年8月に停止するという判断を受けて AI プラットフォームの移行先を探す必要がありました。\n\n\n\n2.7. 課題\n\n移行業務は付加価値を生みづらい都合で移行先調査の優先順位が低くなってしまい、分析基盤管理側の社員も移行先調査がほとんど実施できていない状況でした。\nSnowpark ML は新しいサービスのため公式ドキュメント以外で参照出来る情報が社内外ともにかなり限られている状況でした。\n\n\n\n2.8. 工夫した点\n\n調査作業での工夫点\n\n後から続く方が参照しやすいように調査記録を丁寧に取りました。\n\nSnowflake 公式のリポジトリに置かれているサンプルコードや公式ドキュメント・公式ライブラリソースコードのどの部分を参照したか記録に残しました。\n調査記録を客先社内公開済み。\n\n必要最低限の領域までの調査に留めることで、スケジュールや実装方針について予定より早く合意を取ることができました。\n\n関係者が多くなるため情報提供をいち早く行うことを優先しました。\n\n\n\n\n\n2.9. 成果\n\nSnowpark ML の利用は前例が少なかったため Snowflake 社からの個別開示情報などを利用して情報収集と事前検証を行ないました。結果、既存ワークフローに比べてコスト・性能面・セキュリティ面で優位性があることを示し、客先での先行事例を作ることができました。\n\n価値を生みづらいと見込まれていた移管作業の意義を示したため、注目度を上げ、周囲を巻き込むことに成功しました。客先での社内政治的にも Snowpark ML 導入推進の話を通しやすくなる状況作りに貢献しました。\n\n本プロジェクトではリーダーとして技術調査・スケジュール策定・チームへの作業指示・顧客他部署への情報共有など多様な役割を担うことができました。\n\n\n\n2.10. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n\n\n\n2.11. 開発環境\n\nAWS\n\nSageMaker\nCodeCommit\nSecrets Manager\n\nSQL\n\nSnowflake\n\nPython 実行環境\n\nSageMaker (conda_python3)\n\nAI プラットフォーム\n\nSnowpark ML"
  },
  {
    "objectID": "resume/03-cnsh.html#情報通信企業向け-データマート整備",
    "href": "resume/03-cnsh.html#情報通信企業向け-データマート整備",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "3. 情報通信企業向け データマート整備",
    "text": "3. 情報通信企業向け データマート整備\n\n3.1. 概要\n顧客情報と紐付けて分析や機械学習に利用するための下記特徴量の作成\n\nポイントサービス加盟店と顧客推定住所との距離\nポイントサービス詳細情報\n決済情報\n様々な特徴量を次元圧縮して生成する特徴量\n行動履歴からルールベースで推定されたライブイベント実績\n\n\n\n3.2. 期間\n\n[2023/04 - 2023/05] ポイントサービス加盟店と顧客推定住所との距離\n[2023/06 - 2023/07] 決済情報\n[2023/08 - 2023/09] 行動履歴からルールベースで推定されたライフイベント実績\n[2023/10 - 2023/12] 様々な特徴量を次元圧縮して生成する特徴量\n[2024/01 - 2024/03] ポイントサービス詳細情報\n\n\n\n3.3. 規模・役割\n\n役割：サブリーダー\n規模：4名\n\n\n\n3.4. 担当業務\n\n(主に私1名) データ作成月次作業向けワークフロー構築\n(4名) データレイク調査\n(4名) データ抽出クエリ作成\n(リーダーと私の2名) レビュー\n(4名) 検証\n(4名) 保守\n(4名) 月次運用作業\n\n\n\n3.5. 機能開発・実装詳細\nデータマート構成のためのクエリは Juupyter Notebook 上から Python API 経由で実行していましたが、2023年秋頃から dbt Core を導入し SQL ファイルベースへ置き替えつつある状況でした。\n\n[旧環境] Snowflake の Python API 利用 (Jupyter Notebook にて管理)\n\nSnowflake Python API を Jupyter Notebook から実行します。\n\nファイル数が増えたりコード量が増えるとコードの見通しが悪くなりやすい欠点があります。\n\nワークフローは MWAA にて構築しています。\n\n[新環境] dbt Core 利用 (SQL ファイルベース)\n\ndbt Core により SQL ファイル主体で管理を行います。\n\n入出力の依存関係が明示され管理が容易になります。\nCI/CD、自動テスト、自動ドキュメント生成など現代的な開発・運用が可能となります。\n必要に応じて増分データのみを対象とするクエリに変更できます。\n\n\n\n\n\n3.6. 目的・背景\n\nデータレイクは充実しているものの、機械学習や顧客情報分析に利用できるデータマートは発展途上のため適宜追加していく必要がありました。\n\n\n\n3.7. 課題\n\n分析に利用できる特徴量が不足している状況でした。\n従来作成していた特徴量が上流データの仕様変更や不具合によって作ることができない場合がありました。\nJupyter Notebook で管理しているデータマート向けプログラムが長大なため不具合発生時の原因究明に時間が掛かることが多くありました。\n上流データが全て揃ったタイミングでデータマートの月次更新を行っておりましたが、一部情報をできるだけ早く更新してほしいと言われるようになりました。\n\n\n\n3.8. 工夫した点\n\n\n分析に利用できる特徴量が不足している状況でした。\n従来作成していた特徴量が上流データの仕様変更や不具合によって作ることができない場合がありました。\n\n\n\nユーザーアンケートにより整備すべきデータを決定し、より必要とされるデータマートを目指しました。\nできるだけ早くデータを提供できるような上流データを選定しつつ、上流データの障害発生率を調査し取捨選択を行いました。信頼性の高いデータマート運用のために設計時に十分考慮を行いました。\n\n\n\nJupyter Notebook で管理しているデータマート向けプログラムが長大なため不具合発生時の原因究明に時間が掛かることが多くありました。\n上流データが全て揃ったタイミングでデータマートの月次更新を行っておりましたが、一部情報をできるだけ早く更新してほしいと言われるようになりました。\n\n\n\nいずれも解消できるポテンシャルをもつ dbt に移行することとしました。\n\n\n\n3.9. 成果\n\nユーザー目線での改善を続けたことでデータマートのアクセス数増加につながり、部内の大きな成果として表彰を受けました。\n自チーム・他チームともに顧客行動予測を行っており、そのために必要な特徴量を自力で作成し社内の多様なモデルの精度向上に貢献できました。\ndbt 移行を推進することでソースコードを SELECT 文中心の理解しやすいものに置き換えることができました。\n上流データが追加されたタイミングで必要に応じてデータ作成処理を行える (セマンティックレイヤ対応ができる) ように dbt 環境に移行を順次進めることができています。\n\nセマンティックレイヤ対応は dbt Core では非対応のため dbt Cloud 導入時の対応となります。\n\n\n\n\n3.10. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n運用\n保守\n\n\n\n3.11. 開発環境\n\nAWS\n\nCodeCommit\nCloud9\nSecrets Manager\nSageMaker\nMWAA\nEKS\nECS\n\nSQL\n\nSnowflake\ndbt\n\nPython 実行環境\n\nSageMaker (conda_python3)\nJupyterHub (conda_python3)"
  },
  {
    "objectID": "resume/03-cnsh.html#情報通信企業向け-機械学習ワークフローのクラウドシフト",
    "href": "resume/03-cnsh.html#情報通信企業向け-機械学習ワークフローのクラウドシフト",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "4. 情報通信企業向け 機械学習ワークフローのクラウドシフト",
    "text": "4. 情報通信企業向け 機械学習ワークフローのクラウドシフト\n\n4.1. 概要\n\nオンプレ基盤で実施していた顧客行動予測モデル作成 (50モデル分) ワークフローのクラウドシフト\n\n\n\n4.2. 期間\n\n[2022/07 - 2022/10] 28モデル分\n[2022/11 - 2023/03] 22モデル分\n\n\n\n4.3. 規模・役割\n\n規模：4名\n役割：メンバー\n\n\n\n4.4. 担当業務\n\n(私1名) ワークフロー設計・実装\n(私1名) 各ジョブ設計\n(4名) 各ジョブ実装\n(4名) 上流データ調査\n(4名) 機械学習用データ作成クエリの再構成\n(4名) 検証\n(4名) 保守\n\n\n\n4.5. 機能開発・実装詳細\nMWAA (Airflow) + EKS + Kubernetes + Papermill な Python 実行環境が構築済みのため以下の要領で実装を行いました。\n\nMWAA ワークフローを設計し DAG ファイルとして実装\n\n大まかにはモデル共通処理を実行した後、モデル固有の処理を並列で実行する流れです。\n\nSnowflake Python API と DataRobot API を実行する Python コード (Jupyter Notebook) を各ジョブの設計内容に応じて作成\n\n機械学習用データ作成・モデリング・スコアリング・モデル評価指標取得などの処理を実装します。\n\n\n\n\n4.6. 目的・背景\n\n従来の基盤の廃止に伴い AWS 基盤にて機械学習ワークフローを構築する必要がありました。\n\n\n\n4.7. 課題\n\n上流データは仕様が変わりつつ移行済みだったため、従来基盤で利用していたクエリと同等のものを作るには調査・検証の時間を大きく取る必要がありました。\nMWAA と DataRobot に関するノウハウがチーム内になく、自力で調査をしつつ基盤担当者から情報提供を受けながら取り組む必要がありました。\n\n\n\n4.8. 工夫した点\n\nMWAA (Airflow) + EKS + Kubernetes + Papermill の構成で並列処理に強いことを利用し、並列処理を最大限活用できるようにジョブの粒度を調整しました。\n移行対象のクエリの量が膨大かつ移行先上流データがどれか分からない状況だったため、初期調査段階では件数比較を活用しある程度当たりを付ける方法で効率的に設計を進めました。\n\n最終的にはレコードの一致率確認を行っていますが、初めから一致率確認をしていると時間が足りなかったと思われます。\n\nMWAA による機械学習ワークフロー構築時に従来手動で実施していた検証処理も含め、最終的に Slack 通知確認で完了するように作業を簡素化することで単純な移行ではなく価値を生むことを意識しました。\n\n\n\n4.9. 成果\n\n従来と同等のワークフローを維持しつつ、自動化と時短の工夫を入れることで大幅に運用工数を減らすことができました。\n\n\n\n4.10. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n保守\n運用\n\n\n\n4.11. 開発環境\n\nAWS\n\nSageMaker\nCodeCommit\nSecrets Manager\nMWAA\nEKS\nECS\n\nSQL\n\nSnowflake\n\nPython 実行環境\n\nSageMaker (conda_python3)\nJupyterHub (conda_python3)\n\nAI プラットフォーム\n\nDataRobot"
  },
  {
    "objectID": "resume/03-cnsh.html#小売企業向け-客数予測処理実行環境構築",
    "href": "resume/03-cnsh.html#小売企業向け-客数予測処理実行環境構築",
    "title": "職務経歴 株式会社シイエヌエス北海道",
    "section": "5. 小売企業向け 客数予測処理実行環境構築",
    "text": "5. 小売企業向け 客数予測処理実行環境構築\n\n5.1. 概要\n\nオンプレ基盤で実施していた客数予測処理の AWS 環境移行\n\n\n\n5.2. 期間\n\n2022/05 - 2022/06\n\n\n\n5.3. 規模・役割\n\n1名\nメンバー\n\n\n\n5.4. 担当業務\n\n予測処理実行環境構築 (EC2, Python)\n環境変更に伴う Python コード修正・スクリプト作成\n予測処理実行手順構築\n\n\n\n5.5. 機能開発・実装詳細\n\nEC2 に Anaconda をインストールしベイズ統計モデル作成環境を構築します。\n顧客の要求により客数予測に費せる日数が4日程度のためその範囲内で十分終了するよう処理の並列化を行います。\n\n\n\n5.6. 目的・背景\n\n(前提) PoC として1店舗毎にベイズ統計モデルで客数予測を行うプログラムが作成されており、客数予測処理は1店舗あたり4時間程度かかる状況でした。\n\nその上で4日程度で約200店舗分の客数予測を出す環境構築を求められていました。\nインスタンス性能を上げるための AWS 移行となります。\n\n\n\n\n5.7. 課題\n\n要求を満たすためには EC2 高性能インスタンスを利用する必要がありコストは最小限とする必要がありました。\n前任者の作成した並列処理に問題があり総実行時間が長くなってしまいまう。\n経験の浅い作業者に運用を直ちに引き継ぐことになっていたため、手動実行するプロセスを挟むと不具合や遅延が想定されました。\n\n\n\n5.8. 工夫した点\n\n前任者の作成していた並列処理は先にコア数に基づきジョブを分割する形式のシェルスクリプトで構成していましたが、各店舗毎にデータ量が異なるため予測処理が早めに終了して遊びの出るコアが発生してしまっていました。\n\n改善のため xargs に並列処理を管理させることで空きコアに逐次ジョブを実行させる構成に改善させ総実行時間を短縮させることができました。\n\n\n\n\n5.9. 成果\n\n当初の構成に比べて総実行時間を短縮することができ EC2 インスタンス利用時間の削減に成功しました。\n総実行時間は2日程度に抑えることができ、顧客要求を満たすことができました。\n利用可能なリソースが EC2 のみという制約の中、スクリプトを活用し極力自動化し引継ぎ後の業務負荷を軽減させました。\n\n\n\n5.10. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n保守\n\n\n\n5.11. 開発環境\n\nAWS\n\nEC2\n\nSQL\n\nPostgreSQL\n\nGit\nPython 実行環境\n\nPython (公式)\nAnaconda\n\nシェルスクリプト"
  },
  {
    "objectID": "blog/2024-09-22-vim-plugin-idea.html",
    "href": "blog/2024-09-22-vim-plugin-idea.html",
    "title": "最近の Vim プラグイン開発のアイデア",
    "section": "",
    "text": "こんにちは。i9wa4 です。\ndotfiles から切り離したくなってきたらそれがプラグインの作り時。\n今温めているアイデアをメモしておきます。"
  },
  {
    "objectID": "blog/2024-09-22-vim-plugin-idea.html#ローカル設定の読み込み",
    "href": "blog/2024-09-22-vim-plugin-idea.html#ローカル設定の読み込み",
    "title": "最近の Vim プラグイン開発のアイデア",
    "section": "1. ローカル設定の読み込み",
    "text": "1. ローカル設定の読み込み\nおそらく以下が近い気がしていて、自分の dotfiles の設定を切り出しつつ自分が使いやすい形で作りたいです。\nthinca/vim-localrc: Enable configuration file of each directory."
  },
  {
    "objectID": "blog/2024-09-22-vim-plugin-idea.html#terminal-管理",
    "href": "blog/2024-09-22-vim-plugin-idea.html#terminal-管理",
    "title": "最近の Vim プラグイン開発のアイデア",
    "section": "2. Terminal 管理",
    "text": "2. Terminal 管理\nVim/Neovim のターミナルを気軽に開いたり選択範囲のコマンドを流し込むためのプラグイン。\ndotfiles の中で温めてはいるものの、tmux に対する優位性を見い出せずあまり使ってません。\n他には REPL (IPython) 向けの設定もあります。ただ、細々とした Python コードを Vim で動作確認したいユースケースがあるのかなあ？"
  },
  {
    "objectID": "blog/2024-09-22-vim-plugin-idea.html#jupytext-と-ipynb-の同期",
    "href": "blog/2024-09-22-vim-plugin-idea.html#jupytext-と-ipynb-の同期",
    "title": "最近の Vim プラグイン開発のアイデア",
    "section": "3. Jupytext と ipynb の同期",
    "text": "3. Jupytext と ipynb の同期\nJupytext で ipynb と py を同期させるプラグイン。\n通常は Jupytext をコマンドで実行させると思いますが、非同期で同期させる (？) 挙動をさせたいですね。\nJupytext に変換しておくと Git 管理しやすくなるものの、Jupytext がマイナー過ぎてチーム開発で自分が他人に推奨できない点がネックで最近あまり使わなくなりつつあります。\nみんな ipynb の管理どうしているんだろう。。"
  },
  {
    "objectID": "blog/2024-09-22-vim-plugin-idea.html#tabline-設定",
    "href": "blog/2024-09-22-vim-plugin-idea.html#tabline-設定",
    "title": "最近の Vim プラグイン開発のアイデア",
    "section": "4. Tabline 設定",
    "text": "4. Tabline 設定\n頑張って書き上げたため切り離してもよいかも。\nちなみに最近 Statusline は使ってません！"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html",
    "href": "blog/2024-06-17-setup-mac.html",
    "title": "Mac 環境構築手順",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n私の Mac 環境構築手順をまとめておきます。"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#dotfiles-導入",
    "href": "blog/2024-06-17-setup-mac.html#dotfiles-導入",
    "title": "Mac 環境構築手順",
    "section": "1. dotfiles 導入",
    "text": "1. dotfiles 導入\ncf. https://github.com/i9wa4/dotfiles"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#システム設定",
    "href": "blog/2024-06-17-setup-mac.html#システム設定",
    "title": "Mac 環境構築手順",
    "section": "2. システム設定",
    "text": "2. システム設定\n\nマウスのスクロール方向変更\nプライバシーとセキュリティ\n\n画面収録とシステムオーディオ録音\n\n画面の収録とオーディオの録音を両方許可する\n\nChrome, Slack, Zoom\n\n\n\nデスクトップ\n\n壁紙をクリックしてデスクトップを表示\n\nステージマネージャー使用時のみ\n\n\nDock\n\n配置\n自動的に表示/非表示\n\nコントロールセンター\n\nBluetoothアイコンをメニューバーに表示する\nメニューバー\n\nメニューバーを自動的に非表示しない\n時計\n\n日付を常に表示\n秒を表示\n\n\n\nキーボード\n\n日本語入力が重いので設定見直す\n\nMacの日本語入力（日本語IM）が遅いのを解消する5のTips | 8vivid\n\nショートカット\n\n[macOS]キーボードでウィンドウを左半分や右半分に移動する - エンジニアによる投資\n\n\nバッテリー\n\nバッテリーの状態 最適化"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#ターミナル",
    "href": "blog/2024-06-17-setup-mac.html#ターミナル",
    "title": "Mac 環境構築手順",
    "section": "3. ターミナル",
    "text": "3. ターミナル\n\nAlacritty を使う\n\nWezterm でもいいかもしれない"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#zsh",
    "href": "blog/2024-06-17-setup-mac.html#zsh",
    "title": "Mac 環境構築手順",
    "section": "4. Zsh",
    "text": "4. Zsh\n\nCtrl-R のコマンド履歴検索が実行できないとき\n\nzshで「control + R」をやってもコマンド履歴検索が実行できない場合の対処方法。 – 和洋風KAI\n\n~/.zshenv\n# あれば書く\n~/.zshrc\n# あれば書く"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#aws",
    "href": "blog/2024-06-17-setup-mac.html#aws",
    "title": "Mac 環境構築手順",
    "section": "6. AWS",
    "text": "6. AWS\n\n6.1. Okta 経由\n\nAWS アカウントにIAM Identity Center ユーザーポータル経由でサインインする方法\n\n\n\n6.2. AWS CLI 経由\n\nAWS CLIの最新バージョンのインストールまたは更新 - AWS Command Line Interface\n\nこれに従って AWS CLI をインストールする\n\n自動認証更新で IAM Identity Center AWS CLI トークンプロバイダーの認証情報を使用するようにを設定します - AWS Command Line Interface\nログイン (毎回やる必要なし)\naws sso login --profile xxx\n動作確認\naws ec2 describe-instances --profile xxx\ndefault profile の設定手順\n# ~/.zshrc 等に以下を記載しておく\nexport AWS_DEFAULT_PROFILE=\n\n# シェルの補完を使いながら以下のように入力する\nAWS_DEFAULT_PROFILE=xxx\naws ec2 describe-instances\naws s3 ls\n~/.aws/credentials の設定\n\nAccess Keys の説明を読む！"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#その他",
    "href": "blog/2024-06-17-setup-mac.html#その他",
    "title": "Mac 環境構築手順",
    "section": "7. その他",
    "text": "7. その他\n\n【Mac】.DS_Storeを一括削除&作らないようにするコマンド - Kizineko\nFinder\n\nよく使う項目 username 追加\nコマンド実行\n# Finderを終了させられるようにする (Command+Q で終了できるようになる)\ndefaults write com.apple.Finder QuitMenuItem -bool YES\n\n# 元に戻す場合\ndefaults write com.apple.Finder QuitMenuItem -bool NO\n\nプログラミング用フォント MyricaM をダウンロード・インストールする\nDocker Desktop の Docker Daemon 設定"
  },
  {
    "objectID": "blog/2024-06-17-setup-mac.html#おまけ-ショートカット集",
    "href": "blog/2024-06-17-setup-mac.html#おまけ-ショートカット集",
    "title": "Mac 環境構築手順",
    "section": "8. (おまけ) ショートカット集",
    "text": "8. (おまけ) ショートカット集\n\n\n\n\n\n\n\n\nカテゴリ\nショートカット\n説明\n\n\n\n\nウインドウ操作\nCommand + Tab\nアプリケーション切り替え\n\n\nウインドウ操作\nCommand + @\n同一アプリケーションの切り替え\n\n\nウインドウ操作\nCommand + Option + Arrow\nChrome タブ切り替え\n\n\nその他\nCommad + Q\nFinder 終了\n\n\nその他\nCommand + Ctrl + Q\nロック"
  },
  {
    "objectID": "blog/2024-05-05-deploy-quarto.html",
    "href": "blog/2024-05-05-deploy-quarto.html",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "",
    "text": "こんにちは。i9wa4 です。"
  },
  {
    "objectID": "blog/2024-05-05-deploy-quarto.html#前提",
    "href": "blog/2024-05-05-deploy-quarto.html#前提",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "1. 前提",
    "text": "1. 前提\nスライドをできるだけ Git で管理したいので Markdown をスライドに変換する方向性で色々なツールを比較検討していて、 Quarto (https://quarto.org/) に決めました。\n.qmd ファイルという見慣れないファイルを利用しますが、利点としては以下ですね。\n\n環境構築が pip で完了する\nVS Code で開くと Jupyter Notebook っぽくセルを実行できる"
  },
  {
    "objectID": "blog/2024-05-05-deploy-quarto.html#やったこと",
    "href": "blog/2024-05-05-deploy-quarto.html#やったこと",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "2. やったこと",
    "text": "2. やったこと\n下記リポジトリを整備しました。\nhttps://github.com/i9wa4/slides\nREADME.md にも書いてますが\nQuartoでスライドを作ってGitHub Pagesで公開する #GitHubActions - Qiita\nを参考にしてます。"
  },
  {
    "objectID": "blog/2024-05-05-deploy-quarto.html#感想",
    "href": "blog/2024-05-05-deploy-quarto.html#感想",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "3. 感想",
    "text": "3. 感想\nGitHub Actions はまだよく分かってないままなのですが、一旦動くようになってよかったです。"
  },
  {
    "objectID": "blog/2024-06-28-systemd-user.html",
    "href": "blog/2024-06-28-systemd-user.html",
    "title": "systemd がユーザー権限でも使える",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nsystemd がユーザー権限でも設定できると知ったので記事にします。"
  },
  {
    "objectID": "blog/2024-06-28-systemd-user.html#基本的な情報まとめ",
    "href": "blog/2024-06-28-systemd-user.html#基本的な情報まとめ",
    "title": "systemd がユーザー権限でも使える",
    "section": "1. 基本的な情報まとめ",
    "text": "1. 基本的な情報まとめ\n\n設定ファイル格納先\n\n~/.config/systemd/user/\n\nコマンド\n\nsystemd --user\nuser オプションを付けて通常の systemd と同様に使用する"
  },
  {
    "objectID": "blog/2024-06-28-systemd-user.html#timer-設定手順",
    "href": "blog/2024-06-28-systemd-user.html#timer-設定手順",
    "title": "systemd がユーザー権限でも使える",
    "section": "2. timer 設定手順",
    "text": "2. timer 設定手順\n私の用途では timer 設定ができれば OK です。\n下記リポジトリの設定を使って説明していきます。\ni9wa4/minecraft-bedrock-server-setup/bin/init.sh\n# ~/.config/systemd/user/ に設定ファイルを配置する\nln -fs \"${DIR_REPO}\"/etc/mbs-backup.service \\\n  \"${HOME}\"/.config/systemd/user/mbs-backup.service\nln -fs \"${DIR_REPO}\"/etc/mbs-backup.timer \\\n  \"${HOME}\"/.config/systemd/user/mbs-backup.timer\n\n# 設定ファイルを読み込む\nsystemctl --user daemon-reload\n\n# timer をログイン時に実行する\nsystemctl --user enable mbs-backup.timer\n\n# timer を実行する\nsystemctl --user start mbs-backup.timer\n\n# サーバーの起動時にサービスを立ち上げる\nsudo loginctl enable-linger i9wa4"
  },
  {
    "objectID": "blog/2024-06-28-systemd-user.html#参考リンク",
    "href": "blog/2024-06-28-systemd-user.html#参考リンク",
    "title": "systemd がユーザー権限でも使える",
    "section": "3. 参考リンク",
    "text": "3. 参考リンク\n\nsystemd/ユーザー - ArchWiki\nサーバー起動時に非rootユーザーでsystemdを使ってサービスを立ち上げる #systemd - Qiita"
  },
  {
    "objectID": "blog/2024-09-08-quarto-dataframe-preview-test.html",
    "href": "blog/2024-09-08-quarto-dataframe-preview-test.html",
    "title": "Quarto による DataFrame の表示テスト",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nブックマーク表示に Pandas の DataFrame が使えないかどうか確認のための実験メモです。"
  },
  {
    "objectID": "blog/2024-09-08-quarto-dataframe-preview-test.html#ライブラリのインストール",
    "href": "blog/2024-09-08-quarto-dataframe-preview-test.html#ライブラリのインストール",
    "title": "Quarto による DataFrame の表示テスト",
    "section": "1. ライブラリのインストール",
    "text": "1. ライブラリのインストール\n\n# #| include: false と設定するとセルを隠すことができる\n!python3 -m pip install pandas\n!python3 -m pip install --upgrade jinja2\n\nDefaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pandas in /home/runner/.local/lib/python3.10/site-packages (2.2.3)\nRequirement already satisfied: numpy&gt;=1.22.4 in /home/runner/.local/lib/python3.10/site-packages (from pandas) (2.1.1)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/lib/python3/dist-packages (from pandas) (2022.1)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /home/runner/.local/lib/python3.10/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: tzdata&gt;=2022.7 in /home/runner/.local/lib/python3.10/site-packages (from pandas) (2024.2)\nRequirement already satisfied: six&gt;=1.5 in /usr/lib/python3/dist-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\nDefaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: jinja2 in /home/runner/.local/lib/python3.10/site-packages (3.1.4)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in /usr/lib/python3/dist-packages (from jinja2) (2.0.1)"
  },
  {
    "objectID": "blog/2024-09-08-quarto-dataframe-preview-test.html#データの読み込み",
    "href": "blog/2024-09-08-quarto-dataframe-preview-test.html#データの読み込み",
    "title": "Quarto による DataFrame の表示テスト",
    "section": "2. データの読み込み",
    "text": "2. データの読み込み\n\n# #| include: false と設定するとセルを隠すことができる\nimport pandas as pd\n\ndf_all = pd.read_csv(\"../assets/20240907-quarto-df/quarto-df.csv\")\ndisplay(df_all)\n\n\ndef make_clickable(url, title):\n    return f'&lt;a href=\"{url}\"&gt;{title}&lt;/a&gt;'\n\n\ndef extract_tag(tag, df=df_all):\n    _df = df.query(f'Tags == \"{tag}\"').copy()\n    _df[\"Item\"] = _df.apply(lambda row: make_clickable(row[\"URL\"], row[\"Title\"]), axis=1)\n    _df = _df[[\"Date\", \"Item\"]].sort_values([\"Date\", \"Item\"], ascending=[False, False]).reset_index(drop=True)\n    return _df.to_html(escape=False, index=False)\n\n\n\n\n\n\n\n\nDate\nTags\nTitle\nURL\n\n\n\n\n0\n2024-09-04\nTagA\ntesttest\nhttps://www.google.com\n\n\n1\n2024-09-07\nTagB\ntesttesttesttesttesttesttesttestte0sttesttestt...\nhttps://www.google.com\n\n\n2\n2024-09-08\nTagB\n1testtesttesttesttesttesttesttestte1sttesttest...\nhttps://www.google.com\n\n\n3\n2024-09-09\nTagA\n2testtesttesttesttesttesttesttesttesttesttestt...\nhttps://www.google.com\n\n\n4\n2024-09-10\nTagA\n3testtesttesttesttesttesttesttesttesttesttestt...\nhttps://www.google.com\n\n\n5\n2024-09-11\nTagB\n4testtesttesttesttesttesttesttesttesttesttestt...\nhttps://www.google.com"
  },
  {
    "objectID": "blog/2024-09-08-quarto-dataframe-preview-test.html#tagb",
    "href": "blog/2024-09-08-quarto-dataframe-preview-test.html#tagb",
    "title": "Quarto による DataFrame の表示テスト",
    "section": "3. TagB",
    "text": "3. TagB\n\n# #| code-fold: true と設定するとセルを折りたたむことができる\nextract_tag('TagB')\n\n\n\n\n\n\n\n\nDate\n\n\n\nItem\n\n\n\n\n\n\n\n\n\n\n\n2024-09-11\n\n\n\n4testtesttesttesttesttesttesttesttesttesttesttestteuuuuuuuuuuuuuuuuutttttttttttt\n\n\n\n\n\n\n\n2024-09-08\n\n\n\n1testtesttesttesttesttesttesttestte1sttesttesttesttesttesttesttestt\n\n\n\n\n\n\n\n2024-09-07\n\n\n\ntesttesttesttesttesttesttesttestte0sttesttesttesttesttesttesttestt"
  },
  {
    "objectID": "blog/2024-01-01-init.html",
    "href": "blog/2024-01-01-init.html",
    "title": "Initial Post",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n初投稿になります。"
  },
  {
    "objectID": "blog/2024-01-01-init.html#i9wa4-とは",
    "href": "blog/2024-01-01-init.html#i9wa4-とは",
    "title": "Initial Post",
    "section": "1. i9wa4 とは",
    "text": "1. i9wa4 とは\n\n読み：いくわよ\n仕事：データエンジニア・MLOpsエンジニア\n\n業務知識は個人公開が難しいものが多いのでブログでは関係ない話ばかりになりそうです。"
  },
  {
    "objectID": "blog/2024-01-01-init.html#このブログの運用方針",
    "href": "blog/2024-01-01-init.html#このブログの運用方針",
    "title": "Initial Post",
    "section": "2. このブログの運用方針",
    "text": "2. このブログの運用方針\n\n他サービスに流用するかもしれないけど記事の元データはここで一元管理したい\nこれまで色々書いてきた記事もここに集約していきたい"
  },
  {
    "objectID": "blog/2024-03-26-setup-ds100knock.html",
    "href": "blog/2024-03-26-setup-ds100knock.html",
    "title": "データサイエンス100本ノックの実行環境構築 (WSL2)",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n下記リポジトリを見てください。以上。\nhttps://github.com/i9wa4/wsl2-100knocks-preprocess"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html",
    "href": "blog/2024-01-27-setup-efm-langserver.html",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n最近 Vim と Neovim に efm-langserver を導入したので手順を説明していきます。"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#efm-langserver-とは",
    "href": "blog/2024-01-27-setup-efm-langserver.html#efm-langserver-とは",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "1. efm-langserver とは",
    "text": "1. efm-langserver とは\nmattn さんの記事を見るのが最良ですね。\nBig Sky :: Lint ツールを Language Server に対応させるコマンド efm-langserver 作った。\n\nどんな言語であろうとも Lint ツールが grep と同様の形式で結果を出力してくれさえすれば Language Server にしてしまうコマンド\n\nLinter をインストールした後 Vim/Neovim で Info や Error を画面内に表示させたいときに efm-langserver が活用できると思えばよいです。"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#efm-langserver-のインストール",
    "href": "blog/2024-01-27-setup-efm-langserver.html#efm-langserver-のインストール",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "2. efm-langserver のインストール",
    "text": "2. efm-langserver のインストール\nUbuntu 22.04 (WSL2) でのインストール手順を記載しておきます。\nGo 言語を Go Wiki: Ubuntu - The Go Programming Language に従ってインストールします。\nsudo add-apt-repository -y ppa:longsleep/golang-backports\nsudo apt update\nsudo apt install -y golang-go\nefm-langserver を GitHub - mattn/efm-langserver: General purpose Language Server に従ってインストールします。\ngo install github.com/mattn/efm-langserver@latest\n~/.profile などに以下を追記して PATH を通しておきます。\nexport PATH=\"${HOME}\"/go/bin:\"${PATH}\""
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#config.yaml-の作成",
    "href": "blog/2024-01-27-setup-efm-langserver.html#config.yaml-の作成",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "3. config.yaml の作成",
    "text": "3. config.yaml の作成\nefm-langserver 用設定ファイル $XDG_CONFIG_HOME/efm-langserver/config.yaml に必要な設定を記述していきます。\nREADME を参考に shellcheck を使うための設定のみ抽出したものが以下です。\nversion: 2\nroot-markers:\n  - .git/\nlint-debounce: 1s\n\ntools:\n  sh-shellcheck: &sh-shellcheck\n    lint-command: 'shellcheck -f gcc -x'\n    lint-source: 'shellcheck'\n    lint-formats:\n      - '%f:%l:%c: %trror: %m'\n      - '%f:%l:%c: %tarning: %m'\n      - '%f:%l:%c: %tote: %m'\n\nlanguages:\n  sh:\n    - &lt;&lt;: *sh-shellcheck"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#vim-の設定",
    "href": "blog/2024-01-27-setup-efm-langserver.html#vim-の設定",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "4. Vim の設定",
    "text": "4. Vim の設定\nプラグインマネージャー dein.vim や dpp.vim などで採用されている TOML ファイルでのプラグイン設定箇所を抽出しました。遅延起動設定はお好みで。\n[[plugins]]\nrepo = 'prabirshrestha/vim-lsp'\non_event = ['VimEnter']\n\n[[plugins]]\nrepo = 'mattn/vim-lsp-settings'\non_source = ['vim-lsp']\nhook_source = '''\nlet g:lsp_auto_enable = 1\nlet g:lsp_log_file = ''\nlet g:lsp_settings = {\n  \\   'efm-langserver': {\n  \\     'disabled': v:false,\n  \\     'allowlist': ['sh'],\n  \\   }\n  \\ }\n'''"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#neovim-の設定",
    "href": "blog/2024-01-27-setup-efm-langserver.html#neovim-の設定",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "5. Neovim の設定",
    "text": "5. Neovim の設定\nVim 同様に TOML ファイルの記述を抽出しました。こちらも遅延起動設定はお好みで。\n[[plugins]]\nrepo = 'neovim/nvim-lspconfig'\non_event = ['VimEnter']\nlua_source = '''\nlocal lspconfig = require('lspconfig')\nlspconfig.efm.setup{}\n'''"
  },
  {
    "objectID": "blog/2024-01-27-setup-efm-langserver.html#感想",
    "href": "blog/2024-01-27-setup-efm-langserver.html#感想",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "6. 感想",
    "text": "6. 感想\nLinter をインストールできていれば出力形式を見て自力で Language Server として組み込める……素晴らしいですね！\nLinter は手動でインストールして設定ファイルを管理しておくのが結局一番分かりやすいなと実感しているのですが、その状態で簡単に Vim/Neovim に反映できる efm-langserver はかなり有り難いです。"
  },
  {
    "objectID": "slides/20240204-sapporo.vim.html#自己紹介",
    "href": "slides/20240204-sapporo.vim.html#自己紹介",
    "title": "Sapporo.vim 自己紹介",
    "section": "1. 自己紹介",
    "text": "1. 自己紹介\n\n【HN】 i9wa4 (いくわよ)\n【札幌在住歴】 9年\n【仕事】 直近1.5年は AWS 機械学習基盤の業務\n【最近の Vim 活】\n\nプラグインマネージャー dein.vim から dpp.vim へ移行\nvim-lsp 導入\nefm-langserver 導入"
  },
  {
    "objectID": "slides/20240204-sapporo.vim.html#本日のタスク",
    "href": "slides/20240204-sapporo.vim.html#本日のタスク",
    "title": "Sapporo.vim 自己紹介",
    "section": "2. 本日のタスク",
    "text": "2. 本日のタスク\n\nDocker / Kubernetes の入門書を読む"
  },
  {
    "objectID": "slides/20240204-sapporo.vim.html#結果",
    "href": "slides/20240204-sapporo.vim.html#結果",
    "title": "Sapporo.vim 自己紹介",
    "section": "3. 結果",
    "text": "3. 結果\n\n何となく compose.yml と Dockerfile を触ってた状態だったので頭の中を整理できたかも\nちょっと古い本だったので Compose Spec について追加で調べた\n\ndocker-compose (旧) と docker compose (新) があり検索すると前者の情報の方が多い……\n\nKubernetes (Minikube) の章は読めてないのでは帰宅後に\n\n\n\n\n\nhttps://connpass.com/event/307552/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "uma-chan’s page",
    "section": "",
    "text": "uma-chan’s page\n   \n\nabout\nblog\nresume"
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "slides",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n\n\n\n\n\nSapporo.vim 自己紹介\n\n\n\n\n\n\nslide\n\n\nvim-jp\n\n\n\n\n\n\n2024-02-04\n\n\n\n\n\n\n\nSapporo.vim 自己紹介\n\n\n\n\n\n\nslide\n\n\nvim-jp\n\n\n\n\n\n\n2023-12-16\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "slides/20231216-sapporo.vim.html#自己紹介",
    "href": "slides/20231216-sapporo.vim.html#自己紹介",
    "title": "Sapporo.vim 自己紹介",
    "section": "1. 自己紹介",
    "text": "1. 自己紹介\n\n[HN] i9wa4 (いくわよ)\n[札幌在住歴] 9年\n[仕事] 直近1.5年は AWS データ分析基盤業務 (MLOps)\n[最近の Vim 活]\n\nLinter 利用構成変更 “mason.nvim + null-ls.nvim” -&gt; “makeprg”\nMarkdown Formatter (Denops プラグイン) 作成"
  },
  {
    "objectID": "slides/20231216-sapporo.vim.html#本日のタスク",
    "href": "slides/20231216-sapporo.vim.html#本日のタスク",
    "title": "Sapporo.vim 自己紹介",
    "section": "2. 本日のタスク",
    "text": "2. 本日のタスク\n\ndein.vim -&gt; dpp.vim 移行\nVim の LSP 環境整備\nefm-langserver 導入\nvital.vim の中身チェック\nddu.vim 導入\nfish 導入"
  },
  {
    "objectID": "slides/20231216-sapporo.vim.html#本日の成果",
    "href": "slides/20231216-sapporo.vim.html#本日の成果",
    "title": "Sapporo.vim 自己紹介",
    "section": "3. 本日の成果",
    "text": "3. 本日の成果\n\ndein.vim -&gt; dpp.vim 移行\n\n\n遅延なしプラグインの起動までできた\nこのあとは遅延起動プラグイン対応のために設定ファイル (TypeScript) を書きたい\n\n\n\n\n\nhttps://connpass.com/event/302060/"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n\n\n\n\n\n最近の Vim プラグイン開発のアイデア\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nvim\n\n\n\n\n\n\n2024-09-22\n\n\n\n\n\n\n\nQuarto による DataFrame の表示テスト\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nquarto\n\n\n\n\n\n\n2024-09-08\n\n\n\n\n\n\n\nMarkdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nquarto\n\n\n\n\n\n\n2024-08-25\n\n\n\n\n\n\n\n技術系 Tips まとめ\n\n\n\n\n\n\nblog\n\n\ntech\n\n\n\n\n\n\n2024-07-15\n\n\n\n\n\n\n\nsystemd がユーザー権限でも使える\n\n\n\n\n\n\nblog\n\n\ntech\n\n\n\n\n\n\n2024-06-28\n\n\n\n\n\n\n\n購入したガジェットの紹介\n\n\n\n\n\n\nblog\n\n\ngadget\n\n\n\n\n\n\n2024-06-17\n\n\n\n\n\n\n\nMac 環境構築手順\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nmac\n\n\n\n\n\n\n2024-06-17\n\n\n\n\n\n\n\nQuarto で作ったスライドを GitHub Pages にデプロイする\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nquarto\n\n\n\n\n\n\n2024-05-05\n\n\n\n\n\n\n\nVim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nvim\n\n\ndev\n\n\n\n\n\n\n2024-05-04\n\n\n\n\n\n\n\nデータサイエンス100本ノックの実行環境構築 (WSL2)\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nwsl2\n\n\n\n\n\n\n2024-03-26\n\n\n\n\n\n\n\nWSL2 のセットアップ\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nwsl2\n\n\n\n\n\n\n2024-03-25\n\n\n\n\n\n\n\nefm-langserver を Vim/Neovim で利用する\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nvim\n\n\n\n\n\n\n2024-01-27\n\n\n\n\n\n\n\n自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介\n\n\n\n\n\n\nblog\n\n\ntech\n\n\nvim\n\n\ndev\n\n\n\n\n\n\n2024-01-02\n\n\n\n\n\n\n\nGitHub Pages (Jekyll) blog のタグ追加対応\n\n\n\n\n\n\nblog\n\n\ntech\n\n\n\n\n\n\n2024-01-02\n\n\n\n\n\n\n\nInitial Post\n\n\n\n\n\n\nblog\n\n\n\n\n\n\n2024-01-01\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/2024-06-17-purchased-gadgets.html",
    "href": "blog/2024-06-17-purchased-gadgets.html",
    "title": "購入したガジェットの紹介",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n詳細まで書くかは決めていませんが、これまで購入したガジェット一覧を作っておきます。\n\n\n\nTable 1: 購入ガジェット一覧\n\n\n\n\n\n購入日\nメーカー\n製品名\n\n\n\n\n2019-07-01\nLogicool\nPebble M350\n\n\n2020-07-19\nPFU\nHHKB Professional HYBRID Type-S 英語配列／墨\n\n\n2022-03-12\nLogicool\nERGO M575\n\n\n2022-12-05\nKensington\nスリムブレードトラックボール\n\n\n2023-03-05\nGoogle\nPixel 6a\n\n\n2023-03-12\nSONY\nWF-1000XM4\n\n\n2023-08-05\nBeelink\nBeelink SEi10 Mini PC\n\n\n2024-02-28\nAnker\nAnker PowerExpand 6-in-1 USB-C PD イーサネット ハブ\n\n\n2024-03-02\nLenovo\nThinkPad T14s Gen 4 (AMD)\n\n\n2024-04-05\nShokz\nOpenRun Pro Mini\n\n\n2024-05-06\nFitbit\nFitbit Charge 6\n\n\n2024-06-03\nDell\nDell 27 USB-C モニター - S2722DC\n\n\n2024-06-07\nLogicool\nC270n HDウェブカメラ\n\n\n2024-07-07\nPanasonic\nラムダッシュ パームイン ES-PV3A\n\n\n2024-08-18\nOMRON\n体重体組成計 HBF-702T カラダスキャン"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html",
    "href": "blog/2024-07-15-technical-tips.html",
    "title": "技術系 Tips まとめ",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nたまに使うけど忘れてしまうような技術系の小ネタ (コマンド・設定) まとめ記事です。\n分量が増えてきた分野は別記事に切り出すかもしれません。"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#git",
    "href": "blog/2024-07-15-technical-tips.html#git",
    "title": "技術系 Tips まとめ",
    "section": "1. Git",
    "text": "1. Git\n# よく使うコマンド\ngit add -n .\ngit log --graph\ngit diff --name-only HEAD HEAD~2\ngit diff ID1 ID2 filename\ngit difftool ID1 ID2\ngit show ID\n\ngit reflog\ngit rebase\n\n# リモートリポジトリ作成\ngit init --bare --shared\ngit remote add origin url\ngit clone url"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#postgresql",
    "href": "blog/2024-07-15-technical-tips.html#postgresql",
    "title": "技術系 Tips まとめ",
    "section": "2. PostgreSQL",
    "text": "2. PostgreSQL\n# 起動～データベースへのアクセス\npg_ctl restart\npsql -U postgres -d db_name\n\npg_ctl restart\npsql -U postgres\nCREATE DATABASE db_name;\n\\c db_name\nCREATE SCHEMA sc_name;"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#google-cloud-cli-gcloud-cli",
    "href": "blog/2024-07-15-technical-tips.html#google-cloud-cli-gcloud-cli",
    "title": "技術系 Tips まとめ",
    "section": "3. Google Cloud CLI (gcloud CLI)",
    "text": "3. Google Cloud CLI (gcloud CLI)\n# keyfile 登録からテーブル確認まで\ngcloud auth activate-service-account --key-file ***.json\ngcloud auth list\ngcloud set account ***\nbq --project_id=aaaaa ls\nbq --project_id=aaaaa ls dataset_name\nbq --project_id=aaaaa show dataset_name.table_name\nbq --project_id=aaaaa head --max_rows 5 dataset_name.table_name\n# ログイン\ngcloud auth login"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#google-chrome",
    "href": "blog/2024-07-15-technical-tips.html#google-chrome",
    "title": "技術系 Tips まとめ",
    "section": "4. Google Chrome",
    "text": "4. Google Chrome\n\n4.1. 検索エンジン設定\n\nGoogle 日本語検索\n\nhttps://www.google.com/search?q=%s\n\nGoogle 英語検索\n\nhttps://www.google.com/search?q=%s&gl=us&hl=en&gws_rd=cr&pws=0\n\nDuckDuckGo 日本語検索\n\nhttps://duckduckgo.com/?q=%s&kl=jp-jp&kz=-1&kav=1&kaf=1&k1=-1&ia=web\n\nDuckDuckGo 英語検索\n\nhttps://duckduckgo.com/?q=%s&kl=us-en&kz=-1&kav=1&kaf=1&k1=-1&ia=web"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#excel",
    "href": "blog/2024-07-15-technical-tips.html#excel",
    "title": "技術系 Tips まとめ",
    "section": "5. Excel",
    "text": "5. Excel\n\n5.1. Excel VBA\n\nアドイン追加先\n\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\AddIns\n\n\n\n\n5.2. Excel 関数\n\nシート名を記載したセルB2を利用したハイパーリンク作成\n\n=HYPERLINK(\"#'\"&B2&\"'!$A$1\",B2)"
  },
  {
    "objectID": "blog/2024-07-15-technical-tips.html#word",
    "href": "blog/2024-07-15-technical-tips.html#word",
    "title": "技術系 Tips まとめ",
    "section": "6. Word",
    "text": "6. Word\n\n6.1. Normal.dotm 作成\n\n%APPDATA%\\Microsoft\\Templates\\Normal.dotm 削除\nデザインを作成し既定に設定する\n\nテーマ設定\n\n見出し: 游ゴシック Arial\n本文: 游ゴシック Medium Arial\n\nアウトライン –&gt; 新しいアウトラインの定義 –&gt; オプション –&gt; レベルと対応付ける見出しスタイル"
  },
  {
    "objectID": "blog/2024-03-25-setup-wsl2.html",
    "href": "blog/2024-03-25-setup-wsl2.html",
    "title": "WSL2 のセットアップ",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nWindows マシンを新調する度に WSL2 をインストールしているので手順を書き残しておきます。"
  },
  {
    "objectID": "blog/2024-03-25-setup-wsl2.html#wsl-コマンドのインストール",
    "href": "blog/2024-03-25-setup-wsl2.html#wsl-コマンドのインストール",
    "title": "WSL2 のセットアップ",
    "section": "1. WSL コマンドのインストール",
    "text": "1. WSL コマンドのインストール\nWSL のインストール | Microsoft Learn に従います。\n\n管理者権限で PowerShell or コマンドプロンプトを開きます。\nwsl --install を実行します。 \n以下のように表示されるのでマシンを再起動します。"
  },
  {
    "objectID": "blog/2024-03-25-setup-wsl2.html#ディストリビューションのインストール",
    "href": "blog/2024-03-25-setup-wsl2.html#ディストリビューションのインストール",
    "title": "WSL2 のセットアップ",
    "section": "2. ディストリビューションのインストール",
    "text": "2. ディストリビューションのインストール\n\nPowerShell or コマンドプロンプトを開きます。\nインストール可能なディストリビューションを表示します。\nwsl --list --online\nUbuntu 22.04 LTS をインストールする場合は以下のように入力します。\nwsl --install -d Ubuntu-22.04\n画面表示に従ってユーザー名とパスワードを入力します。\nUbuntu を終了します。\nexit\n(必要に応じて) 既定のディストリビューションを設定します。\nwsl --set-default Ubuntu-22.04"
  },
  {
    "objectID": "blog/2024-03-25-setup-wsl2.html#ディストリビューションのアンインストール",
    "href": "blog/2024-03-25-setup-wsl2.html#ディストリビューションのアンインストール",
    "title": "WSL2 のセットアップ",
    "section": "3. ディストリビューションのアンインストール",
    "text": "3. ディストリビューションのアンインストール\n\nPowerShell or コマンドプロンプトを開きます。\nインストール済みのディストリビューションを表示します。\nwsl --list\n不要なディストリビューションをアンインストールします。\nwsl --unregister Ubuntu-22.04"
  },
  {
    "objectID": "blog/2024-03-25-setup-wsl2.html#詳細設定",
    "href": "blog/2024-03-25-setup-wsl2.html#詳細設定",
    "title": "WSL2 のセットアップ",
    "section": "4. 詳細設定",
    "text": "4. 詳細設定\n設定ファイルや systemd に関しては以下のページを参考にするとよいです。\nWSL での詳細設定の構成 | Microsoft Learn"
  },
  {
    "objectID": "blog/2024-05-04-get-git-branch-name.vim.html",
    "href": "blog/2024-05-04-get-git-branch-name.vim.html",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "",
    "text": "こんにちは。i9wa4 です。"
  },
  {
    "objectID": "blog/2024-05-04-get-git-branch-name.vim.html#経緯",
    "href": "blog/2024-05-04-get-git-branch-name.vim.html#経緯",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "1. 経緯",
    "text": "1. 経緯\n私の Vim 設定では操作中のリポジトリのブランチ名を tabline に表示させていて、これは bash-completion に依存した実装となっています。この依存をなくし、ついでに依存をゼロにしようと思ったので Vim script でプラグインを書いてみようと思いました。\n.git ディレクトリを覗けば現在のブランチ名が分かるらしいことは知っていて、以下のリポジトリが自分のやりたいことであるということも知っている状態です。\nhttps://github.com/itchyny/vim-gitbranch\nGemini がどれくらい使えるか試してみたくて、上記リポジトリは見ずに進めてみます。"
  },
  {
    "objectID": "blog/2024-05-04-get-git-branch-name.vim.html#gemini-との開発過程",
    "href": "blog/2024-05-04-get-git-branch-name.vim.html#gemini-との開発過程",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "2. Gemini との開発過程",
    "text": "2. Gemini との開発過程\nGemini とのやりとりを書き残しておきます。\n\n2.1. .git 探索関数作成\n\n2.1.1. 質問\nVim script で以下の関数を作成してほしいです。\n- あるディレクトリのパスを引数にとり、そこから順に上の階層をたどって、.git ディレクトリがあればそこで探索をやめて.gitディレクトリのパスを戻り値とする。見つからなければ空文字列を返す。\n\n\n2.1.2. 回答\nVim script で .git ディレクトリを探す関数\n\n以下の Vim script は、引数として渡されたディレクトリパスから順に上の階層をたどり、.git ディレクトリを見つけたらそのパスを返します。見つからなければ空文字列を返します。\n\nfunction! FindGitDir(dir)\n  \" 引数がない場合はカレントディレクトリを代入 \"\n  if (empty(a:dir))\n    let dir = expand('%:p')\n  endif\n\n  \" ループフラグを初期化 \"\n  let found = 0\n\n  \" 順に上の階層をたどる \"\n  while (!found && !empty(dir) && dir != '/')\n    \" .git ディレクトリが存在するか確認 \"\n    if (isdirectory(dir . '/.git'))\n      let found = 1\n      let gitdir = dir . '/.git'\n    endif\n\n    \" 上の階層へ移動 \"\n    let dir = expand(dirname(dir))\n  endwhile\n\n  \" 結果を返す \"\n  if (found)\n    return gitdir\n  else\n    return ''\n  endif\nendfunction\n\n\n\n2.2. ブランチ名取得関数作成\n\n2.2.1. 質問\nVim script で以下の関数を作成してほしいです。\n- .gitディレクトリのパスを引数にとり、.gitディレクトリを除いて現在のブランチ名を取得し、それを戻り値とする。\n\n\n2.2.2. 回答\n以下の Vim script は、.git ディレクトリのパスを引数にとり、.git ディレクトリを除いた現在のブランチ名を取得し、それを戻り値とします。\n\nfunction! GetCurrentBranch(gitdir)\n  \" 引数が空の場合、エラーを返す \"\n  if (empty(a:gitdir))\n    error('引数が空です')\n  endif\n\n  \" カレントブランチ名の取得 \"\n  let branch = system('git --git-dir=\"' . a:gitdir . '\" rev-parse --abbrev-ref HEAD')\n\n  \" .git ディレクトリを除いたブランチ名を返す \"\n  return substitute(branch, a:gitdir . '/', '', 'g')\nendfunction\n\n\n2.2.3. 質問\nsystem() を使わず、gitコマンドを使わずに実現させてほしいです。\n\n\n2.2.4. 回答\nVim script で system() や git コマンドを使わずに現在のブランチ名を取得するには、以下の方法があります。\n\n\n1. :echo %b コマンドを使用する\n\nこの方法は、最も簡単でシンプルな方法です。%b 変数は、現在選択されているバッファのブランチ名を表します。\n\n\" 現在のブランチ名をエコーする \"\n:echo %b\n\n\n2. expand('%:p:h') を使って .git/HEAD ファイルを読み込む\n\nこの方法は、より汎用的で、カレントバッファ以外のブランチ名を取得する場合にも使用できます。.git/HEAD ファイルには、現在のブランチ名が格納されています。\n\n\" .git/HEAD ファイルのパスを取得 \"\nlet headfile = expand('%:p:h') . '/.git/HEAD'\n\n\" HEAD ファイルの内容を読み込む \"\nlet headcontent = readfile(headfile)\n\n\" ブランチ名を抽出する \"\nlet branch = match(headcontent, 'ref: refs/heads/(.+)')\n\n\" 結果を確認 \"\necho \"現在のブランチ: \" . branch\n\n\n3. git log の出力を解析する\n\nこの方法は、より詳細なブランチ情報 (コミットハッシュなど) を取得する場合に役立ちます。\nVim Script\n\n\" git log の出力をバッファに読み込む \"\n:redir &gt; /dev/null git log -1\n\n\" ブランチ名を抽出する \"\nlet branch = match(v:buffer['[0]'], 'ref: refs/heads/(.+)')\n\n\" 結果を確認 \"\necho \"現在のブランチ: \" . branch\n回答1が嘘すぎてびっくり。今回は回答2がよさそう。\nこの時点で下記リポジトリを確認してみたところ回答2と同様の手法でブランチ名を取得しているようでした。\nhttps://github.com/itchyny/vim-gitbranch\nここまで分かればあとは動作を確認しながら書けそうです。"
  },
  {
    "objectID": "blog/2024-05-04-get-git-branch-name.vim.html#完成品",
    "href": "blog/2024-05-04-get-git-branch-name.vim.html#完成品",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "3. 完成品",
    "text": "3. 完成品\nGemini と考えたコードが跡形もなくなっている。。なぜ。。\nTODO: 繰り返し呼ばれることを念頭に処理を軽くしたい\nhttps://github.com/i9wa4/get-git-branch-name.vim"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html",
    "href": "blog/2024-01-02-vim-plugin-mnh.html",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n少し前に作った Vim/Neovim プラグインの紹介記事となります。"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html#プラグイン概要",
    "href": "blog/2024-01-02-vim-plugin-mnh.html#プラグイン概要",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "1. プラグイン概要",
    "text": "1. プラグイン概要\n\nhttps://github.com/i9wa4/markdown-number-header.vim\n\nMarkdown の見出し番号を付ける or 更新するプラグインです。\nDeno と Denops に依存しています。"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html#プラグインを作ることになったきっかけ",
    "href": "blog/2024-01-02-vim-plugin-mnh.html#プラグインを作ることになったきっかけ",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "2. プラグインを作ることになったきっかけ",
    "text": "2. プラグインを作ることになったきっかけ\nMarkdown All in One という VSCode 拡張の Markdown 見出し番号を付ける機能を Vim でも使いたかったのですが、CLI アプリケーション (Formatter) や Vim プラグインを探しても見つからなかったので自作しようと思い至りました。"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html#denops-プラグインとして作ろうと思った理由",
    "href": "blog/2024-01-02-vim-plugin-mnh.html#denops-プラグインとして作ろうと思った理由",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "3. Denops プラグインとして作ろうと思った理由",
    "text": "3. Denops プラグインとして作ろうと思った理由\nまず、自分が Vim 上でしか使わないため CLI アプリケーションとしてではなく Vim プラグインとして作ろうとは思ってました。\nそして私は Vim 使いなので Vim script で書くか Denops プラグインとして TypeScript で書くかの二択で、楽しそうなので後者を選びました。"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html#denops-プラグイン開発体験について",
    "href": "blog/2024-01-02-vim-plugin-mnh.html#denops-プラグイン開発体験について",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "4. Denops プラグイン開発体験について",
    "text": "4. Denops プラグイン開発体験について\n初めて Denops プラグインを作ったし、しかも TypeScript にも触れたことがなかったのですが意外と困ることは少なかったです。\n核となる見出し番号を振る処理は TypeScript の本領発揮という感じで楽に書けましたね。\nまず以下のドキュメントに従ってチュートリアルを終えて、あとは先人の Denops プラグインのリポジトリを覗いてお作法を学びつつプラグインを完成させました。\n\n参考ページ:\n\nDeno で Vim/Neovim のプラグインを書く (denops.vim) | Zenn\nIntroduction - Denops Documentation (英語版)"
  },
  {
    "objectID": "blog/2024-01-02-vim-plugin-mnh.html#感想",
    "href": "blog/2024-01-02-vim-plugin-mnh.html#感想",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "5. 感想",
    "text": "5. 感想\n今も毎日使っているプラグインなので「無いんだったら作ればいい」精神でフッ軽に作れたことを嬉しく思ってます。\n今後も必要なものは自分で作っていたいですね。"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html",
    "href": "blog/2024-01-02-jelyll-adjust.html",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "",
    "text": "[2024-07-15 追記] ブログは Jekyll から Quarto に切り替えたため下記内容はブログに反映されなくなっています。\nこんにちは。i9wa4 です。\nブログを作ったので少しだけ機能と見た目を手入れしてみました。"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html#調整前",
    "href": "blog/2024-01-02-jelyll-adjust.html#調整前",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "1. 調整前",
    "text": "1. 調整前\n\n現在 Jekyll (GitHub Pages) の Minima (jekyll/minima: Minima is a one-size-fits-all Jekyll theme for writers.) が適用されている状態\n\nHTML ファイルが必要になったらここから持ってくる！"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html#やりたいこと",
    "href": "blog/2024-01-02-jelyll-adjust.html#やりたいこと",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "2. やりたいこと",
    "text": "2. やりたいこと\n\nタグ対応\n\nタグ毎の一覧ページの追加\nトップページに各タグの一覧ページへのリンク追加\n各記事にて付与したタグの一覧ページリンクの追加\n\nリポジトリルートの Markdown ファイルへのリンクがヘッダに追加されてしまうためヘッダの記述の簡素化"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html#タグ対応",
    "href": "blog/2024-01-02-jelyll-adjust.html#タグ対応",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "3. タグ対応",
    "text": "3. タグ対応\n\nsyudead さんの記事とリポジトリを参考に実装しました。私は HTML ではなく Markdown 中心の構成としたかったのであくまで参考という感じです。\n\nJekyllのブログでタグ機能を実装する\n\n各記事へのタグ付け方法\n一覧ページの html 記述\n\nsyudead/syudead.github.io\n\nページ一覧の作成方法\n\n./_inclides/tag.html を ./blog.html などの一覧ページ内にて include する\n\n各記述でのタグ一覧ページリンク表示\n\n./_layouts/post.html 参照\n\n\n\nトップページに各タグの一覧ページへのリンクを追加する対応については ./index.md に地道にリンクを追加する方法を取ることとしました。"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html#ヘッダ簡素化",
    "href": "blog/2024-01-02-jelyll-adjust.html#ヘッダ簡素化",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "4. ヘッダ簡素化",
    "text": "4. ヘッダ簡素化\n\nMinima の HTML ファイル (minima/_includes/header.html at master · jekyll/minima) をリポジトリに追加して対象箇所を削除すれば OK。\n\n(2024/01/28 追記) スマホ版のハンバーガーメニューが寂しかったのでヘッダ簡素化は取りやめました。"
  },
  {
    "objectID": "blog/2024-01-02-jelyll-adjust.html#感想",
    "href": "blog/2024-01-02-jelyll-adjust.html#感想",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "5. 感想",
    "text": "5. 感想\n\n必要最低限の機能は実装できたので割と満足です。\n見た目をちゃんと調整しようとすると HTML や CSS の調整が必要になってきますが、あんまりやりたくないので当面このままでいきます。"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nGitHub でブログやスライドを管理したい方にオススメな Quarto による GitHub Pages 公開手順を紹介していきます。\nスライド管理に興味がない方は適宜スライドに関する記述を無視しながら読み進めてください。\nここでは以下のドキュメントの手順をなぞりつつ、ブログ記事とスライドを管理するためのプロジェクト構成を導入します。\nQuarto – GitHub Pages"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#想定する読者",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#想定する読者",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "想定する読者",
    "text": "想定する読者\n\nPython の環境構築ができている方\nGit/GitHub 操作の説明がなくても問題ない方"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#事前準備",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#事前準備",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "事前準備",
    "text": "事前準備\n\nQuarto のインストール\nまずは Quarto をインストールしておきましょう。\n$ pip install quarto-cli\nなぜか公式ドキュメントではこのインストール方法は説明されていなかったのですが、これが一番簡単です。同じ疑問をもった方が以下で質問していました。\nInstalling quarto-cli via pip · quarto-dev/quarto-cli · Discussion #8597\n\n\nGitHub リポジトリ作成\n任意の名前でリポジトリを作成しましょう。\n私は GitHub リポジトリ https://github.com/i9wa4/i9wa4.github.io を作成していて公開 URL は https://i9wa4.github.io になります。\nここではデモ用に https://github.com/i9wa4/quarto-page というリポジトリを作成してみます。こちらの公開 URL は https://i9wa4.github.io/quarto-page になります。\n特にこだわりがなければリポジトリ名は username.github.io でよいでしょう。"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#基本構造を整える",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#基本構造を整える",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "基本構造を整える",
    "text": "基本構造を整える\n作成したリポジトリをクローンして以下のファイルを作成します。\n\n_quarto.yml\n\n\n_quarto.yml\n\nproject:\n  type: website\n  output-dir: docs\n\n.nojelyll\n空ファイルなので下記コマンドで作成します。\n$ touch .nojekyll\n.gitignore\n\n\n.gitignore\n\n/.quarto/\n/docs/\n\nindex.qmd\n\n\nindex.qmd\n\n---\ntitle: トップページ index.qmd\n---\n\n本文\n\n\n作成できたら main ブランチに push しておきましょう。"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#初回デプロイを行う",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#初回デプロイを行う",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "初回デプロイを行う",
    "text": "初回デプロイを行う\n初回はローカル環境からデプロイを実行します。\n指示に従って yes と入力すると gh-pages ブランチが作成されて初回デプロイが完了します。\n$ quarto publish gh-pages\n? Publish site to ssh://git@github.com/i9wa4/quarto-page using gh-pages? (Y/n) › Yes"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#回目以降のデプロイを自動化する",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#回目以降のデプロイを自動化する",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "2回目以降のデプロイを自動化する",
    "text": "2回目以降のデプロイを自動化する\n2回目以降のデプロイは以下のファイルを作成しておくことで GitHub Actions に任せることができます。\n\n\n.github/workflows/publish.yml\n\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#ブログ記事とスライドのための構造を整える",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#ブログ記事とスライドのための構造を整える",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "ブログ記事とスライドのための構造を整える",
    "text": "ブログ記事とスライドのための構造を整える\n以下の内容を push すると https://i9wa4.github.io/quarto-page が完成します。\n\nindex.qmd\n\n\nindex.qmd\n\n---\ntitle: トップページ index.qmd\nlisting:  # トップページにリスト表示させたくない場合は listing の設定は不要\n  contents:\n    - \"blog\"\n    - \"slides\"  # トップページにスライドを表示させる場合\n  exclude:\n    filename: \"index.qmd\"\n  sort:\n    - \"date desc\"\n---\n\n本文\n\n- [ブログ記事一覧](./blog)\n- [スライド一覧](./slides)\n\n## ブログとスライドの新着一覧\n\nブログやスライドなどディレクトリを分けている記事をまとめてリスト表示することができます。\n\n\n\nブログ\n\nblog/index.qmd\n\n\nblog/index.qmd\n\n---\ntitle: ブログ記事一覧\nlisting:\n  contents:\n    - \".\"\n  sort:\n    - \"date desc\"\n---\n\nblog/2024-08-25-test1.qmd\n\n\nblog/2024-08-25-test1.qmd\n\n---\ntitle: test1\ndate: 2024-08-25\n---\n\n1行目\n\nファイル名の先頭に日付をつけておくと管理しやすいですが必須ではありません。\n\nblog/test2.qmd\n\n\nblog/test2.qmd\n\n---\ntitle: test2\ndate: 2024-08-26\n---\n\nここが1行目\n\nファイル名の先頭に日付をつけておくと管理しやすいですが必須ではありません。\n\n\n\n\nスライド\n\nslides/index.qmd\n\n\nslides/index.qmd\n\n---\ntitle: スライド一覧\nlisting:\n  contents:\n    - \".\"\n  sort:\n    - \"date desc\"\n---\n\nslides/test1-slide.qmd\n\n\nslides/test1-slide.qmd\n\n---\ntitle: \"test1-slide タイトル\"\nauthor: i9wa4\ndate: 2024-08-25\nformat:\n  revealjs:\n    slide-level: 2\n    slide-number: true\n---\n\n本文\n\n## サブタイトル1\n\n本文\n\n## サブタイトル2\n\n本文\n\nslides/test2-slide.qmd\n\n\nslides/test2-slide.qmd\n\n---\ntitle: \"test2-slide タイトル\"\nauthor: i9wa4\ndate: 2024-08-25\nformat:\n  revealjs:\n    slide-level: 2\n    slide-number: true\n---\n\n本文\n\n## サブタイトル1\n\n本文\n\n## サブタイトル2\n\n本文"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#プレビューを確認しつつ編集する",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#プレビューを確認しつつ編集する",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "プレビューを確認しつつ編集する",
    "text": "プレビューを確認しつつ編集する\nプレビューを Web ブラウザで確認しながら編集が可能です。\n$ quarto preview\n編集内容がリアルタイムに反映されるので執筆体験がとても良いです！\n[2024-08-26 追記] プロジェクト構成によっては Firefox 以外の Web ブラウザでうまくプレビューできない事象が発生している模様。\nQuarto preview only loading homepage in Firefox · Issue #3045 · quarto-dev/quarto-cli\n遭遇した場合は以下のコマンドで docs/ 配下に都度 html ファイルを作成する、もしくは Firefox を使う、で対処しましょう。\n$ quarto render"
  },
  {
    "objectID": "blog/2024-08-25-publishing-github-pages-with-quarto.html#おわりに",
    "href": "blog/2024-08-25-publishing-github-pages-with-quarto.html#おわりに",
    "title": "Markdown ライクな Quarto でブログやスライドを作って GitHub Pages で公開する",
    "section": "おわりに",
    "text": "おわりに\nもっと色々といじっていきたい方は以下を参考にしてみるとよいでしょう。\n\nQuarto 公式\n\nページ https://quarto.org\nリポジトリ https://github.com/quarto-dev/quarto-web\n\ni9wa4 の GitHub Pages\n\nページ https://i9wa4.github.io\nリポジトリ https://github.com/i9wa4/i9wa4.github.io"
  },
  {
    "objectID": "resume/index.html",
    "href": "resume/index.html",
    "title": "職務経歴書",
    "section": "",
    "text": "現住所 北海道札幌市\n職務経歴書公開先 https://i9wa4.github.io/resume\nGitHub https://github.com/i9wa4"
  },
  {
    "objectID": "resume/index.html#職務要約",
    "href": "resume/index.html#職務要約",
    "title": "職務経歴書",
    "section": "1. 職務要約",
    "text": "1. 職務要約\n北海道大学理学部数学科を卒業後、Windowsアプリエンジニアや組込エンジニアとして6年勤務しました。\nその後株式会社シイエヌエス北海道にてデータエンジニアとして2年間データパイプライン構築や機械学習ワークフロー構築業務に従事し、サブリーダーやリーダーを任されてきました。\n2024年4月から現職である株式会社hacomonoにて一人データエンジニアとしてデータ基盤の構築・運用・保守業務に従事しております。"
  },
  {
    "objectID": "resume/index.html#自己pr",
    "href": "resume/index.html#自己pr",
    "title": "職務経歴書",
    "section": "2. 自己PR",
    "text": "2. 自己PR\n【役割面】前職シイエヌエス北海道にてプロジェクトのリーダーやサブリーダーを任されておりました。現職 hacomono ではメンバー採用ではあるものの、入社直後にデータエンジニアが私1名のみになった都合でデータ基盤関連のタスク管理・社内調整・目標管理といったリーダー相当の業務を担当しております。\n【技術面】Snowflake データマート整備、Airflow & dbt のデータパイプライン構築運用保守、Embulk による BigQuery へのデータ転送の運用保守、Terraform によるデータ基盤の IaC 化の推進、機械学習ワークフロー構築運用保守などの知見をもちます。\n【性格面】周囲の社員に貢献できるような業務にモチベーション高く取り組むことができます。具体的にはドキュメント整備・勉強会開催・情報共有などです。データ利活用に向けた業務は中長期的に周囲の社員に貢献できるものと信じて取り組めるため、自分にマッチした業務であると感じています。"
  },
  {
    "objectID": "resume/index.html#職務経歴",
    "href": "resume/index.html#職務経歴",
    "title": "職務経歴書",
    "section": "3. 職務経歴",
    "text": "3. 職務経歴\n新しい順に記載しております。\n\n\n\n\n\n\n\n\n\n在籍期間\n所属\n概要\n詳細\n\n\n\n\n2024/04 - 現在\n株式会社hacomono\nデータエンジニアのメンバーとして以下に従事- 自社環境・顧客環境の DWH 構築・運用- 自社データ基盤の運用改善・機能追加\n詳細\n\n\n2022/04 - 2024/03\n株式会社シイエヌエス北海道\nデータエンジニアのサブリーダーやリーダーとして以下に従事- データパイプライン構築- 機械学習ワークフロー構築\n詳細\n\n\n2018/08 - 2022/03\n新光商事LSIデザインセンター株式会社\n組込エンジニアのメンバーとして以下に従事- 車載マイコンの機能開発- インバータやモータの制御開発\n詳細\n\n\n2016/04 - 2018/07\nオークマ株式会社\nアプリエンジニアのメンバーとして以下に従事- Windows 用 CAD/CAM アプリ開発の要件定義・テスト\n詳細\n\n\n\n\n3.1. 最も苦労したプロジェクト\n前職で2023年12月～2024年3月にリーダーとして参画していた以下です。AI プラットフォームのリプレイスのためにワークフロー全体の技術選定から設計まで行いました。顧客との方針調整を密に実施し PoC 段階から設計・実装へフェーズを進めることができました。\n情報通信企業向け 機械学習ワークフローと AI プラットフォーム移管 | 職務経歴 株式会社シイエヌエス北海道"
  },
  {
    "objectID": "resume/index.html#通常業務以外の活動",
    "href": "resume/index.html#通常業務以外の活動",
    "title": "職務経歴書",
    "section": "4. 通常業務以外の活動",
    "text": "4. 通常業務以外の活動\n\n[2024/07/02] 会社テックブログ執筆 - hacomonoデータ基盤におけるデータ転送の課題と今後の対応 - hacomono TECH BLOG\n[2024/08/21] レビュー寄稿 - 株式会社hacomonoのBigQuery導入事例 - Findy Tools"
  },
  {
    "objectID": "resume/index.html#今後取り組みたいこと",
    "href": "resume/index.html#今後取り組みたいこと",
    "title": "職務経歴書",
    "section": "5. 今後取り組みたいこと",
    "text": "5. 今後取り組みたいこと\n\n5.1. 役割面\n\n【直近】データエンジニアとしてリーダー経験・マネジメント経験を積む\n【3-5年後】データ関連業務のリーダーや PjM としてリーダーシップを発揮する、あるいはデータマネージャーのような形でデータで売上貢献できるようになる\n\n\n\n5.2. 技術面\n\nSnowflake / BigQuery / dbt の知見を深める\nデータガバナンスや信頼性に関する経験を積む\nLLM の下支え (ベクトルデータベース構築など)\nMLOps の実践"
  },
  {
    "objectID": "resume/index.html#スキルレベル",
    "href": "resume/index.html#スキルレベル",
    "title": "職務経歴書",
    "section": "6. スキルレベル",
    "text": "6. スキルレベル\n★：業務経験あり\n\n\n\n\n\n\n\n\n\n項目\n種類\n使用期間\nレベル\n\n\n\n\nOS\nAmazon Linux / Ubuntu\n ★4年\n要件に応じた環境構築や開発環境利用が可能\n\n\n言語\nPython\n ★4年\n一人称で作業可能\n\n\n言語\nSQL\n ★3年\n一人称で作業可能\n\n\n言語\nShell Script\n ★4年\n一人称で作業可能\n\n\nDB\nMySQL / PostgreSQL\n ★3年\n不具合調査等でのデータ閲覧可能\n\n\nCloud\nAWS\n ★3年\nEC2 / ECS / StepFunctions / SageMaker / Cloud9 / Airflow (MWAA) 等を含む環境構築や作業が可能\n\n\nCloud\nGoogle Cloud\n ★0.5年\nCompute Engine / Cloud Functions / Datastream / BigQuery (後述) 等を含む環境構築や作業が可能\n\n\nCloud (Data)\nSnowflake\n ★2年\nデータマート作成 / SQL パフォーマンス改善 / Snowpark ML 利用 / パラメータ管理が可能\n\n\nCloud (Data)\nBigQuery\n ★0.5年\nBigQuery 関連の権限管理やデータセット・テーブル作成を Terraform 管理に移行することが可能\n\n\nCloud (ML)\nDataRobot\n ★2年\nオートパイロットや blueprint 固定でのモデルデプロイ・運用、各種評価指標の取得の実装が可能\n\n\nIaC\nDocker\n ★3年\nDockerfile や Docker Compose の記述・実行が可能\n\n\nIaC\nTerraform\n ★0.5年\nBigQuery 関連の IaC 化作業が可能\n\n\nその他\nGitHub / CodeCommit\n ★4年\nGit flow や GitHub flow に則った開発利用やレビューが可能\n\n\nその他\nGitHub Actions\n ★0.5年\n既存ワークフロー改修 / GitHub Pages 関連のワークフロー作成が可能\n\n\nその他 (Data)\ndbt Core\n ★0.5年\nスクラッチから marts まで書きあげることが可能\n\n\nその他 (Data)\nEmbulk\n ★0.5年\n転送元 DB や 利用するインスタンス性能に応じたパフォーマンス改善が可能"
  },
  {
    "objectID": "resume/index.html#資格",
    "href": "resume/index.html#資格",
    "title": "職務経歴書",
    "section": "7. 資格",
    "text": "7. 資格\n\n\n[2015/03] TOEIC スコア 805\n[2023/04] 統計検定2級"
  },
  {
    "objectID": "resume/04-hacomono.html",
    "href": "resume/04-hacomono.html",
    "title": "職務経歴 株式会社hacomono",
    "section": "",
    "text": "Table 1: 会社概要・雇用形態 (2024年時点)\n\n\n\n\n\n\n\n\n\n事業内容\n月額型店舗のための会員管理・予約・キャッシュレス決済システム「hacomono」開発・販売\n\n\n資本金\n100百万円\n\n\n売上高\n非公開\n\n\n従業員数\n217名\n\n\n上場／非上場\n非上場\n\n\n雇用形態\n正社員\n\n\n勤務地\nフルリモート (居住地 北海道札幌市)年に数回東京原宿本社へ出社\n\n\n所属\n[2024/04 - 2024/08] 基盤本部 データ基盤部[2024/09 - 現在] データ本部 データ基盤部 (組織改編)\n以下、新しい順にプロジェクトを記載しております。"
  },
  {
    "objectID": "resume/04-hacomono.html#プロジェクト以外の業務",
    "href": "resume/04-hacomono.html#プロジェクト以外の業務",
    "title": "職務経歴 株式会社hacomono",
    "section": "1. プロジェクト以外の業務",
    "text": "1. プロジェクト以外の業務\n\n1.1. 社外へのアウトプット\n\n[2024/07/02] hacomonoデータ基盤におけるデータ転送の課題と今後の対応 - hacomono TECH BLOG\n[2024/08/21] Findy Tools への BigQuery レビュー寄稿 株式会社hacomonoのBigQuery導入事例"
  },
  {
    "objectID": "resume/04-hacomono.html#顧客環境-bigquery-へのバッチ転送システム開発運用",
    "href": "resume/04-hacomono.html#顧客環境-bigquery-へのバッチ転送システム開発運用",
    "title": "職務経歴 株式会社hacomono",
    "section": "2. 顧客環境 BigQuery へのバッチ転送システム開発・運用",
    "text": "2. 顧客環境 BigQuery へのバッチ転送システム開発・運用\n\n2.1. 概要\n\nhacomono に蓄積されたデータを顧客環境 BigQuery へ日次バッチ転送するためのシステム開発・運用\n\n\n\n2.2. 期間\n\n2024/04 - 現在\n\n\n\n2.3. 規模・役割\n\n[2024/04 - 2024/05]\n\n役割：メンバー\n規模：2名\n\n[2024/06 - 現在]\n\n役割：リーダー\n規模：1名\n\n\n\n\n2.4. 担当業務\n\n[2024/04 - 2024/05] (2名) 定常運用業務・業務引き継ぎ\n[2024/06 - 現在] (私1名) 定常運用業務・障害対応\n\n\n\n2.5. 機能開発・実装詳細\n\nGitHub と Terraform (Terragrunt) を用いて以下の構成を実装します。\n\nRDS MySQL or Aurora MySQL をデータソースとして Embulk で顧客環境 BigQuery にデータ転送を行う\n\nシステム構成図は下記ブログをご参照ください。\n\nhacomonoデータ基盤におけるデータ転送の課題と今後の対応 - hacomono TECH BLOG\n\n\n\n\n2.6. 目的・背景\n\n顧客に向けて DWH 提供を行うサービスを開始するために暫定的に構築したシステムを運用し続けている状況です。\n\n\n\n2.7. 課題\n\n全量のデータを転送させているためデータ増加により転送時間が延びてしまい、具体的には以下の問題が起こるようになりました。\n\nRDS BurstBalance を使い切ることによる転送の不安定化が起こる\nデータソース側の DB で一時領域不足になる\n顧客約束の時刻に転送が間に合わなくなる\n\n\n\n\n2.8. 工夫した点\n\n問題発生源の特定のために Embulk のログやデータソースのメトリクスから真因を究明するよう努めました。\n\n\n\n2.9. 成果\n\n\nRDS BurstBalance を使い切ることによる転送の不安定化が起こる\n\n\nReadIOPS の数値が支配的だったため並列実行数を減らしたり、Embulk の読み込み量のパラメータを調整したりすることで BurstBalance を使い切らないまま可能な限り早く転送させるよう調整を行いました。\n\n\n2.10. 担当フェーズ\n\n運用\n保守\n\n\n\n2.11. 開発環境\n\nGitHub\nTerraform\nEmbulk\nAWS\n\nECS\nRDS MySQL\nAurora MySQL\nVPC\n\nGoogle Cloud\n\nBigQuery"
  },
  {
    "objectID": "resume/04-hacomono.html#社内-bigquery-環境構築運用",
    "href": "resume/04-hacomono.html#社内-bigquery-環境構築運用",
    "title": "職務経歴 株式会社hacomono",
    "section": "3. 社内 BigQuery 環境構築・運用",
    "text": "3. 社内 BigQuery 環境構築・運用\n\n3.1. 概要\n\nhacomono プロダクトのデータベースから BigQuery へデータを転送し社内向けに DWH を作成するシステムの運用・保守\n\n\n\n3.2. 期間\n\n2024/04 - 現在\n\n\n\n3.3. 規模・役割\n\n[2024/04 - 2024/05]\n\n役割：メンバー\n規模：2名\n\n[2024/06 - 現在]\n\n役割：リーダー\n規模：1名\n\n\n\n\n3.4. 担当業務\n\n[2024/04 - 2024/05] (2名) 定常運用業務・業務引き継ぎ\n[2024/06 - 現在] (私1名) 定常運用業務・運用改善業務\n\n\n\n3.5. 機能開発・実装詳細\n\n(新規実装) Google Cloud プロジェクトと BigQuery の権限管理機能\n\n\n\n3.6. 目的・背景\n\n社内の分析需要に応えるために権限管理の行き届いた新しい BigQuery 環境を構築・運用が必要となりました。\n\n\n\n3.7. 課題\n\n\n(新規実装) Google Cloud プロジェクトと BigQuery の権限管理機能\n\n\n概ね IaC 対応が済んでいましたが権限追加に関してはコンソールからの手動追加対応となっておりました。これにより環境差分が生じ terraform apply が通らなくなる状況でした。\n\n\n3.8. 工夫した点\n\n\n(新規実装) Google Cloud プロジェクトと BigQuery の権限管理機能\n\n\n権限を最小限に留めるためにプロジェクトレベルでの権限付与をせず、データセット毎に権限を付与する運用に変更しました。\n\n\n3.9. 成果\n\n\n(新規実装) Google Cloud プロジェクトと BigQuery の権限管理機能\n\n\nIaC 化により権限の種類とユーザーを CSV ファイルに集約でき、権限付与状況をリポジトリで管理できるようになりました。\n\n\n3.10. 担当フェーズ\n\n運用\n保守\n\n\n\n3.11. 開発環境\n\nGitHub\nTerraform\nEmbulk\nAWS\n\nECS\nRDS MySQL\nAurora MySQL\nVPC\n\nGoogle Cloud\n\nBigQuery"
  },
  {
    "objectID": "resume/04-hacomono.html#顧客環境-bigquery-へのリアルタイム転送システム開発運用",
    "href": "resume/04-hacomono.html#顧客環境-bigquery-へのリアルタイム転送システム開発運用",
    "title": "職務経歴 株式会社hacomono",
    "section": "4. 顧客環境 BigQuery へのリアルタイム転送システム開発・運用",
    "text": "4. 顧客環境 BigQuery へのリアルタイム転送システム開発・運用\n\n4.1. 概要\n\nhacomono に蓄積されたデータを顧客環境 BigQuery へリアルタイム転送するためのシステム開発・運用\n2024年8月まで開発を続けていましたが、契約締結できず検証段階で開発を中断しています。\n\n\n\n4.2. 期間\n\n2024/04 - 2024/08\n\n\n\n4.3. 規模・役割\n\n[2024/04 - 2024/05]\n\n役割：メンバー\n規模：2名\n\n[2024/06 - 2024/08]\n\n役割：リーダー\n規模：2名\n\n\n\n\n4.4. 担当業務\n\n[2024/04 - 2024/05] (2名) 開発引き継ぎ\n[2024/06 - 2024/08] 主機能開発・進捗管理\n\n\n\n4.5. 機能開発・実装詳細\n\nGitHub と Terraform (Terragrunt) を用いて以下の構成を実装します。\n\n[主機能] RDS MySQL のデータを Datastream によってリアルタイムに転送させる\n\n(新規実装) [周辺機能] ログ出力\n\n\n\n\n\n4.6. 目的・背景\n\n顧客要望がありリアルタイム性を重視したテーブルに絞って機能を提供することとなりました。\n個社向け開発として進めていますが他社への展開も可能な状態に整備する必要があります。\n\n\n\n4.7. 課題\n\n前任者から引き継いだ状態のリポジトリが雑然としており各社向けの設定ファイルを切り替えることができず大規模なリファクタリングが必要でした。\nDatastream の知見のある方が社内にいないため障害発生時の対応のノウハウがない状態でした。\n\n\n\n4.8. 成果\n\n\nDatastream の知見のある方が社内にいないため障害発生時の対応のノウハウがない状態でした。\n\n\nRDS 再起動による接続断から復旧する必要がありストリームの復元を行うことがありましたが、この経験により障害発生時に欠損し得るデータに関して説明ができるようになりました。\n本機能のオプションサービス化にあたり懸念事項の解像度を上げ、サービスのマニュアル更新の準備に役立てることができました。\n\n\n4.9. 担当フェーズ\n\n詳細設計\n開発\nテスト\n運用\n保守\n\n\n\n4.10. 開発環境\n\nGitHub\nTerraform\nTerragrunt\nAWS\n\nRDS MySQL\nVPC\n\nGoogle Cloud\n\nBigQuery\nDatastream"
  },
  {
    "objectID": "resume/02-sld.html",
    "href": "resume/02-sld.html",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "",
    "text": "Table 1: 会社概要・雇用形態 (2022年時点)\n\n\n\n\n\n\n\n\n\n事業内容\n組込ソフトウェア開発、ASIC/FPGA 開発\n\n\n資本金\n8000万円\n\n\n売上高\n16.7億円\n\n\n従業員数\n83名\n\n\n上場／非上場\n非上場\n\n\n勤務地\n北海道札幌市2020年3月以降は週に約3回リモートワーク実施\n\n\n雇用形態\n正社員\n\n\n所属\n[2018/08 - 2022/03] ソフト開発一部 開発二課\n以下、新しい順にプロジェクトを記載しております。"
  },
  {
    "objectID": "resume/02-sld.html#親会社向け車両通信プロトコル解説講義",
    "href": "resume/02-sld.html#親会社向け車両通信プロトコル解説講義",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "1. 親会社向け車両通信プロトコル解説講義",
    "text": "1. 親会社向け車両通信プロトコル解説講義\n\n1.1. 期間\n\n2022/02 - 2022/03\n\n\n\n1.2. 担当業務\n\n車両組込システムの通信プロトコル (CAN) の説明資料作成\n組込システムへのCAN通信実装\n上記を利用した講義実施\n\n\n\n1.3. 担当フェーズ\n\nなし\n\n\n\n1.4. 開発環境\n\nC\nアセンブラ\nRenesas CS+ V8.05.00\nRH850/C1M-A1\n\n\n\n1.5. 規模・役割\n\n2名\nメンバー"
  },
  {
    "objectID": "resume/02-sld.html#噴霧器システム開発",
    "href": "resume/02-sld.html#噴霧器システム開発",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "2. 噴霧器システム開発",
    "text": "2. 噴霧器システム開発\n\n2.1. 期間\n\n2021/06 - 2022/01\n\n\n\n2.2. 担当業務\n\nプロトタイプ向け汎用インバータ制御開発\n顧客インバータ制御開発\n噴霧器の操作器開発\n\n\n\n2.3. 実績・取り組み\n\n顧客要望で解析用グラフ資料作成業務が発生した際に、自主的に習得していたPythonを用いて満足いただける資料を作成できました。\n\n\n\n2.4. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\n\n\n\n2.5. 開発環境\n\nC\nアセンブラ\nRenesas CS+ V8.05.00\nRL78/G1F\nRL78/G12\n\n\n\n2.6. 規模・役割\n\n4名\nメンバー"
  },
  {
    "objectID": "resume/02-sld.html#車両緊急通報システムのマイコン移植",
    "href": "resume/02-sld.html#車両緊急通報システムのマイコン移植",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "3. 車両緊急通報システムのマイコン移植",
    "text": "3. 車両緊急通報システムのマイコン移植\n\n3.1. 期間\n\n2020/10 - 2021/05\n\n\n\n3.2. 担当業務\n\nマイコン移植による故障懸念点の洗い出し\nマイコンのリソース割当検討\n各種タイマ機能とシリアル通信機能の移植\nテスト仕様書作成\nテスト実施\n\n\n\n3.3. 実績・取り組み\n\n5名が各々実施していた30以上のテスト仕様書のフォーマット整備をExcel VBAで自動化することで全員の負担を軽減し、特に経験の浅い1名の負担軽減に大きく貢献できました。\n\n\n\n3.4. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n\n\n\n3.5. 開発環境\n\nC\nアセンブラ\nGHS MULTI V2020.1.5\nQAC 7.2.3\nRH850/F1K\n\n\n\n3.6. 規模・役割\n\n9名\nメンバー"
  },
  {
    "objectID": "resume/02-sld.html#自動車トラクション制御ファームウェアの無線更新機能の開発",
    "href": "resume/02-sld.html#自動車トラクション制御ファームウェアの無線更新機能の開発",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "4. 自動車トラクション制御ファームウェアの無線更新機能の開発",
    "text": "4. 自動車トラクション制御ファームウェアの無線更新機能の開発\n\n4.0.1. 期間\n\n2020/04 - 2020/09\n\n\n\n4.1. 担当業務\n\nバックアップ・更新処理の設計開発\nカバレッジテスト・単体テスト・結合テストの仕様書作成\nテスト実施\n\n\n\n4.2. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n\n\n\n4.3. 開発環境\n\nC\nアセンブラ\nGHS MULTI V2013.5.5\nQAC 8.1.1J\nwinAMS v6.3.1\nRH850/C1M\n\n\n\n4.4. 規模・役割\n\n8名\nメンバー"
  },
  {
    "objectID": "resume/02-sld.html#自動車トラクション制御開発用ファームウェアの更新機能開発",
    "href": "resume/02-sld.html#自動車トラクション制御開発用ファームウェアの更新機能開発",
    "title": "職務経歴 新光商事LSIデザインセンター株式会社",
    "section": "5. 自動車トラクション制御開発用ファームウェアの更新機能開発",
    "text": "5. 自動車トラクション制御開発用ファームウェアの更新機能開発\n\n5.1. 期間\n\n2019/10 - 2020/03\n\n\n\n5.2. 担当業務\n\nトラクションモータ開発基板側の通信機能・自身のROM書き換え機能の設計開発\nPCアプリ含めたシステムのテスト仕様作成\nテスト実施\n\n\n\n5.3. 担当フェーズ\n\n要件分析\n基本設計\n詳細設計\n開発\nテスト\n\n\n\n5.4. 開発環境\n\nC\nアセンブラ\nGHS MULTI V2015.1.7\nRH850/C1M-A1\n\n\n\n5.5. 規模・役割\n\n6名\nメンバー"
  },
  {
    "objectID": "memo/index.html",
    "href": "memo/index.html",
    "title": "memo",
    "section": "",
    "text": "自分以外には全く価値がなさそうなメモ達\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n\n\n\n\n\n自分用千年戦争アイギスメモ\n\n\n\n\n\n\nmemo\n\n\ngame\n\n\n\n\n\n\n2024-07-20\n\n\n\n\n\n\n\n自分用 Minecraft メモ\n\n\n\n\n\n\nmemo\n\n\ngame\n\n\n\n\n\n\n2024-07-20\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "bookmarks/index.html",
    "href": "bookmarks/index.html",
    "title": "bookmarks",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n\n\n\n\n\n技術系ブックマーク\n\n\n\n\n\n\n\n\n2024-09-15\n\n\n\n\n\n\nNo matching items"
  }
]