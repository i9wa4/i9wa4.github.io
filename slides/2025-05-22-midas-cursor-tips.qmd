---
title: "データエンジニア的 Cursor 利用のコツ"
author:
  - name: 馬渡 大樹
    affiliation: 株式会社GENDA
    roles: データエンジニア
date: 2025-05-22
date-modified: last-modified
description: |
  [登壇資料] "データエンジニア的 Cursor 利用のコツ" in "2025-05-22 ミダスキャピタル 生成AI勉強会"
categories:
  - "slides"
  - "genda"
format:
  revealjs:
    code-copy: true
    embed-resources: true
    footer: "2025-05-22 ミダスキャピタル 生成AI勉強会"
    incremental: false
    scrollable: true
    self-contained: true
    slide-level: 3
    slide-number: true
    smaller: false
    theme:
      - default
      - themes/genda.scss
    width: 1920
    height: 1080
    title-slide-attributes:
      data-background-color: "#001722"  # Dark Navy
      data-background-image: "/assets/2025-05-22-midas-cursor-tips/title-background.jpg"
      data-background-size: "cover"
---

## 1. はじめに

### 1.1. 自己紹介

:::: {.columns}

::: {.column width="50%"}

|        |                                           |
| ---    | ---                                       |
| 名前   | 馬渡 大樹 (Mawatari Daiki)                |
| 所属   | 株式会社GENDA - IT戦略部                  |
| 職種   | データエンジニア / 機械学習基盤エンジニア |
| 住所   | 北海道札幌市                              |
| GitHub | [@i9wa4](https://github.com/i9wa4)        |

- 好き
    - ゲームセンター
    - Vim
    - Happy Hacking Keyboard
- 好きではない
    - Zero Configuration
:::

::: {.column width="50%"}
![](/assets/2025-05-22-midas-cursor-tips/IMG20240922183711-trimmed.jpg){fig-align="left" width="50%"}
:::

::::

### 1.2. 私の主なデータ系業務紹介

:::: {.columns}

::: {.column width="30%"}
**SQL を書くことが多い！**

**業務1**

- DWH のデータ整備
- dbt (data build tool) で依存関係のあるテーブルをSQLファイルとして管理する

**業務2**

- データ可視化のためのダッシュボード作成
- データ分析サポート

**業務3**

- データ基盤の改修
:::

::: {.column width="70%"}
```{mermaid}
C4Context
  title dbt プロジェクトの全体像
  Boundary(databricks_boundary, "Databricks") {
    Boundary(dbt_boundary, "dbt Project") {
      System(stg, "stg.sql", "生データを整形する SQL モデル")
      System(int, "int.sql", "中間集計を行う SQL モデル")
      System(marts, "marts.sql", "最終データマートを作る SQL モデル")
    }
    SystemDb_Ext(raw, "データレイク", "ローデータ")
    System(dashboard, "ダッシュボード")
  }

  Rel(raw, stg, "SELECT ... FROM raw data")
  Rel(stg, int, "SELECT ... FROM stg.sql")
  Rel(int, marts, "SELECT ... FROM int.sql")
  Rel(marts, dashboard, "可視化・分析")
```
:::

::::

## 2. Cursor 設定 Tips

### 2.1. Cursor 設定との向き合い方

:::: {.columns}

::: {.column width="50%"}
**Cursor のテキストエディタとしての設定をしっかりやるべきか？**

私は **No** だと思う

プロジェクト設定を AI エージェントに守ってもらいづらいため色々な環境で作成された Pull Request を許容できる体制 (= CI) でカバーすべき

---

**Cursor の用途の割り切り**

AI エージェント実行アプリとして使いやすくなるグローバル設定を紹介していきます
:::

::: {.column width="50%"}
![](/assets/2025-05-22-midas-cursor-tips/extensions-blocked.png)

Sad News😢

[Microsoft が Cursor を含む VSCode フォークで C/C++ 拡張機能をブロック - BigGo ニュース](https://biggo.jp/news/202504050723_Microsoft_Blocks_CPP_Extension_VSCode_Forks)
:::

::::

### 2.2. 左下歯車アイコンから行う設定 (1)

アクティビティバーを VS Code 風にする

> The vertical orientation is no longer maintained.

使いやすくなりますが自己責任で

![](/assets/2025-05-22-midas-cursor-tips/cursor-settings-down-left-activitybar.png)

### 2.3. 左下歯車アイコンから行う設定 (2)

:::: {.columns}

::: {.column width="55%"}
チャットメッセージのサイズを大きくする

チャット欄が Cursor の本体なのでデカくしましょう

![](/assets/2025-05-22-midas-cursor-tips/cursor-settings-down-left-chat-msg-size.png)
:::

::: {.column width="45%"}
文字を大きくする決意をさせてくれたポスト

ポストの内容通り右上歯車からも設定できる

![](/assets/2025-05-22-midas-cursor-tips/cursor-settings-down-left-chat-msg-size-x.png)

<https://x.com/tetsuro_b/status/1922679755863970196>
:::

::::

### 2.4. 右上歯車アイコンから行う設定

:::: {.columns}

::: {.column width="50%"}
見ておくべき項目

- General
    - Privacy mode: **Enabled**
        - ポリシーで設定変更禁止になっていれば安心
- Features
    - Include project structure [BETA]: **ON**
        - 効果は実感できていないが ON
    - Enable auto-run mode: **ON** (要注意)
        - MCP tools protection: **OFF** (要注意)

auto-run mode は自分の用途や権限に合った範囲内で最大限許容すると効率アップ！
:::

::: {.column width="50%"}
![](/assets/2025-05-22-midas-cursor-tips/cursor-settings-up-right-features.png)
:::

::::

### 2.5. 外部設定

:::: {.columns}

::: {.column width="50%"}
**global gitignore 設定**

リポジトリ内に自分と Cursor の作業用ディレクトリを作成する

```{.gitignore filename=~/.config/git/ignore}
.i9wa4/
```

`~/.gitignore_global` ではなくデフォルト設定に従ったほうが Git と仲良くなれる

[まだ .gitconfig に core.excludesfile を設定しているの？ #Git - Qiita](https://qiita.com/ueokande/items/e0409219e7c68e4277b9)
:::

::: {.column width="50%"}
![](/assets/2025-05-22-midas-cursor-tips/gitignore-x.png)

ポスト内容と用途が違うが Cursor に文脈を与えたりアウトプットさせるのに便利であった

<https://x.com/mizchi/status/1914543131888066561>
:::

::::

### 2.6. MCP 設定

:::: {.columns}

::: {.column width="60%"}
DWH 向けの MCP Server を利用しクエリを実行できるようにする

ここまでの設定により Cursor が自律的にクエリを実行し適宜 SQL や CSV ファイルを残せる！

---

参考

<https://github.com/RafaelCartenet/mcp-databricks-server>

```{.json filename=mcp.json}
{
    "mcpServers": {
        "databricks": {
            "command": "uv",
            "args": [
                "--directory",
                "~/ghq/github.com/RafaelCartenet/mcp-databricks-server",
                "run",
                "main.py"
            ]
        }
    }
}
```
:::

::: {.column width="40%"}
実行の様子

![](/assets/2025-05-22-midas-cursor-tips/cursor-mcp-databricks-query.png){width=150%}
:::

::::

### 2.7. ルール設定

⚠️いずれも未検証です

:::: {.columns}

::: {.column width="50%"}
プロジェクトに対してルールを設定できると便利

```
project/
  .cursor/rules/        # Project-wide rules
  backend/
    server/
      .cursor/rules/    # Backend-specific rules
  frontend/
    .cursor/rules/      # Frontend-specific rules
```

<https://docs.cursor.com/context/rules>

Devin 向けにも別途ルールを整備する必要があり躊躇していました😢
:::

::: {.column width="50%"}
シンボリックリンクを張ればよいという発想

> - Unified `.ai/` folder for all your project-wide AI rules (Markdown)
> - Auto-generate:
>     - ``.cursor/rules/*.mdc``
>     - `.cline-rules`
>     - `.github/copilot-instructions.md`
> - devin-guidelines.md
> - Symlink or copy mode (auto-detects OS capability)

<https://github.com/airulefy/Airulefy>
:::

::::

## 3. まとめ

### 3.1. [まとめ] Cursor x データ抽出はいいぞ

Cursor に正しいクエリを書いてもらいデータ抽出をしてもらうことにフォーカスして利用方法を説明しました

ここまで設定しておくと Cursor 自律的に爆速でデータ抽出をしてくれるため作業効率が上がりました！
